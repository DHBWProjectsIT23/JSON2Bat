{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment JSON2Batch  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0.2.5 \par
}}JSON2Batch}
{\comment Generated by doxygen 1.9.8.}
{\creatim \yr2024\mo4\dy27\hr12\min17\sec26}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt JSON2Batch}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 0.2.5\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Sat Apr 27 2024 12:17:26 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
JSON2Batch\par \pard\plain 
{\tc\tcl1 \v JSON2Batch}
{\xe \v JSON2Batch}
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
 0.2.5\par
JSON2Batch was developed during a project during our first and second semester of university. It generates batch files from JSON files, which can spawn terminals or applications, that run under certain parameters specified within the JSON file.\par
The project was carried out by {\b Elena Schwarzbach, Max Rodler, Simon Blum, Sonia Sinaci} .\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Table of Contents
\par}
{\tc\tcl2 \v Table of Contents}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
JSON2Batch{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Table of Contents\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Build Instructions{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Linux\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Windows\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Generating Documentation\par}
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Documentation{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Project Structure\par}
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab External Libraries{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
easylogging++\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
LoggingWrapper\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
jsoncpp\par}
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab License\par}
}
\par
\par}
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Build Instructions
\par}
{\tc\tcl2 \v Build Instructions}
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Linux
\par}
{\tc\tcl3 \v Linux}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid git clone https://github.com/DHBWProjectsIT23/JSON2Bat/!TODO\par
cmake -S . -B build --config Release\par
cmake --build build\par
}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
UNIX Compiler Compatibility
\par}
{\tc\tcl4 \v UNIX Compiler Compatibility}
The project has been tested with GCC version >= 10.5 and Clang version > 14.\par}
\par}
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Windows
\par}
{\tc\tcl3 \v Windows}
@TODO Fix Windows\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Windows Compiler Compatibility
\par}
{\tc\tcl4 \v Windows Compiler Compatibility}
\par}
\par}
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Generating Documentation
\par}
{\tc\tcl3 \v Generating Documentation}
If the {\i doxygen}  executable is installed local documentation can be generated using:\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid git clone https://github.com/DHBWProjectsIT23/JSON2Bat/!TODO\par
cmake -S . -B build --config Release\par
cmake --build build --target doxygen_build\par
}
\par}
\par}
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Documentation
\par}
{\tc\tcl2 \v Documentation}
The documentation for this project can be found {\f2 here}. A PDF version can be found [here]() and a short man page can be found {\f2 here}.\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Project Structure
\par}
{\tc\tcl3 \v Project Structure}
The project directory is structured as follows:\par
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
assets > {\i Includes files, not directly related to the code} \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
man > {\i Includes the man page} \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
conf > {\i Includes files which will be configured by CMake} \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
include > {\i Includes header files for external libraries} \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
lib > {\i Includes source/binary files for external libraries} \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src > {\i Includes the source code for the project} {
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sources > {\i Includes all ".cpp" files} \par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
include > {\i Includes all ".hpp" files} \par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b main.cpp}\par}
}
\par
\par}
\par}
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
External Libraries
\par}
{\tc\tcl2 \v External Libraries}
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
easylogging++
\par}
{\tc\tcl3 \v easylogging++}
The {\f2 easylogging++} library is used for logging within the application. The configuration for the library is done via a logging file which can be found in {\f2 conf/easylogging.in.conf}. Cmake configures this file into the binary directory upon building. If the configuration file is removed, the application will no longer run.\par}
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
LoggingWrapper
\par}
{\tc\tcl3 \v LoggingWrapper}
While easylogging++ is used for the logging back\'96end within the code there are little remains apart from the configuration. The logging and output of the application is done over a self written wrapper. Altough it is self written, due to it beeing not part of the project we consider it an external libraries. The wrapper is used to simplify parallel output to stdout and the logfile and also enables increased output to stdout for the verbose mode. A few macros are defined for use within the application:\par
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
OUTPUT > {\i Outputs to stdout and the logfile} \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
LOG_INFO > {\i By default only outputs to the logfile} \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
LOG_WARNING > {\i Formats text and outputs to stdout and the logfile} \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
LOG_ERROR > {\i Same as LOG_WARNING but in red and bold} \par}
\par
The macros can be used with streaming in the same way as std::cout would be used. Furthermore, some rudimentary performance tests showed, that the use of the wrapper, does not affect performance in comparison to using both std::cout and easylogging itself.\par}
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
jsoncpp
\par}
{\tc\tcl3 \v jsoncpp}
For parsing the JSON files, the {\f2 jsoncpp} library is used. On UNIX system this library can simply be installed using the systems package manager (tested with WSL/Ubuntu and Arch). For Windows system a prebuild version is included - See Windows for more information.\par}
\par}
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
License
\par}
{\tc\tcl2 \v License}
The project is published under the Apache License V2.0. Check the [license file](LICENSE) for more information! \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Topic Index\par \pard\plain 
{\tc \v Topic Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Topics\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all topics with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
StyleHelpers\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Index\par \pard\plain 
{\tc \v Namespace Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Namespace List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all namespaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b cli} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Includes everything regarding the CLI })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b config} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Namespace used for general project information })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b exceptions} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Namespace used for customized exceptions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b parsing} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The namespace containing everything relevant to parsing })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAES \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b utilities} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Includes all utilities })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
BatchCreator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
cli::CommandLineHandler\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::exception
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
exceptions::CustomException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACW \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
exceptions::ContainsBadCharacterException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
exceptions::FailedToOpenFileException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
exceptions::FileExistsException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
exceptions::InvalidKeyException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
exceptions::InvalidTypeException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
exceptions::InvalidValueException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
exceptions::MissingKeyException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
exceptions::MissingTypeException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
exceptions::NoSuchDirException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
exceptions::ParsingException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
exceptions::UnreachableCodeException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
parsing::FileData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
parsing::JsonHandler\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
parsing::KeyValidator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
options\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
utilities::Utils\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b BatchCreator} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a batch file from a FileData obeject })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cli::CommandLineHandler} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Responsible for the Command Line Interface })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b exceptions::ContainsBadCharacterException} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for when a string contains bad characters })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b exceptions::CustomException} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all custom exceptions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b exceptions::FailedToOpenFileException} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for when a file can't be opened })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b parsing::FileData} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class contains all data from the json file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b exceptions::FileExistsException} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for an already exisiting outputfile })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b exceptions::InvalidKeyException} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for invalid keys })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b exceptions::InvalidTypeException} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for invalid types })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b exceptions::InvalidValueException} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for an ivalid (usually empty) value field })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b parsing::JsonHandler} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file reads all data from the json file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b parsing::KeyValidator} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Validates keys of a Json::Value object })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b exceptions::MissingKeyException} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for missing keys within entries })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b exceptions::MissingTypeException} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for missing types of entries })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b exceptions::NoSuchDirException} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for when a directory does not exist })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b options} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The struct containing all possible options })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b exceptions::ParsingException} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for syntax errors within the json file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b exceptions::UnreachableCodeException} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for when the application reaches code it shouldn't reach })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b utilities::Utils} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Responsible for utility function })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b src/{\b main.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the main function })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/{\b BatchCreator.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the {\b BatchCreator} class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/{\b CommandLineHandler.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Responsible for the Command Line Interface })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/{\b config.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configures general project information })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/{\b Exceptions.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains all the custom exceptions used in the project })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/{\b FileData.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the FileData class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/{\b JsonHandler.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the JsonHandler class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/{\b KeyValidator.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the KeyValidator class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/{\b Utils.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/sources/{\b BatchCreator.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the implementation of the {\b BatchCreator} class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/sources/{\b CommandLineHandler.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation for the Command Line Interface })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/sources/{\b FileData.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of the FileData class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/sources/{\b JsonHandler.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of the JsonHandler class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/sources/{\b KeyValidator.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation for the KeyValidator class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/sources/{\b Utils.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation for the Utils class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Topic Documentation{\tc \v Topic Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
StyleHelpers\par \pard\plain 
{\tc\tcl2 \v StyleHelpers}
{\xe \v StyleHelpers}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static variables to help with CLI styling. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static variables to help with CLI styling. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A group of strings, that use escape sequences to easily style the command line interface on Unix systems. When compiling for Windows all of these strings will be empty, as escape sequences can't be used the same way. \par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Documentation\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cli Namespace Reference\par \pard\plain 
{\tc\tcl2 \v cli}
{\xe \v cli}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Includes everything regarding the CLI. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CommandLineHandler}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Responsible for the Command Line Interface. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const struct option {\b options} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Includes everything regarding the CLI. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This namespace includes all the code regarding the Command Line Interface. This includes the {\b CommandLineHandler} Class, the struct for the options and helpers for Styling.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b CommandLineHandler} \par
{\b options} \par
{\b StyleHelpers} \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v options\:cli}
{\xe \v cli\:options}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const struct option cli::options[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    \{{\cf22 "help"}, no_argument, {\cf17 nullptr}, {\cf23 'h'}\}, \par
    \{{\cf22 "version"}, no_argument, {\cf17 nullptr}, {\cf23 'v'}\}, \par
    \{{\cf22 "credits"}, no_argument, {\cf17 nullptr}, {\cf23 'c'}\}, \par
    \{{\cf22 "verbose"}, no_argument, {\cf17 nullptr}, 0\}, \par
    \{{\cf22 "outdir"}, required_argument, {\cf17 nullptr}, {\cf23 'o'}\}, \par
    {\cf17 nullptr}\par
\}\par
}
{
Definition at line {\b 121} of file {\b CommandLineHandler.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
config Namespace Reference\par \pard\plain 
{\tc\tcl2 \v config}
{\xe \v config}
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Namespace used for general project information. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
constexpr auto {\b LOG_CONFIG} = "C:/Users/Clean/Documents/Uni/JSON2Bat/build/debug-ninja/config/easylogging.conf"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
constexpr auto {\b EXECUTABLE_NAME} = "json2batch"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
constexpr auto {\b MAJOR_VERSION} = "0"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
constexpr auto {\b MINOR_VERSION} = "2"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
constexpr auto {\b PATCH_VERSION} = "5"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
constexpr auto {\b DESCRIPTION} = "A simple tool to convert json to batch."\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
constexpr auto {\b PROJECT_NAME} = "JSON2Batch"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
constexpr auto {\b AUTHORS} = "@AUTHORS"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
constexpr auto {\b HOMEPAGE_URL} = "https://dhbwprojectsit23.github.io/JSON2Bat"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Namespace used for general project information. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v AUTHORS\:config}
{\xe \v config\:AUTHORS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
constexpr auto config::AUTHORS = "@AUTHORS"{\f2 [inline]}, {\f2 [constexpr]}}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 33} of file {\b config.hpp}.}\par
}
{\xe \v DESCRIPTION\:config}
{\xe \v config\:DESCRIPTION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
constexpr auto config::DESCRIPTION = "A simple tool to convert json to batch."{\f2 [inline]}, {\f2 [constexpr]}}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b config.hpp}.}\par
}
{\xe \v EXECUTABLE_NAME\:config}
{\xe \v config\:EXECUTABLE_NAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
constexpr auto config::EXECUTABLE_NAME = "json2batch"{\f2 [inline]}, {\f2 [constexpr]}}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b config.hpp}.}\par
}
{\xe \v HOMEPAGE_URL\:config}
{\xe \v config\:HOMEPAGE_URL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
constexpr auto config::HOMEPAGE_URL = "https://dhbwprojectsit23.github.io/JSON2Bat"{\f2 [inline]}, {\f2 [constexpr]}}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 34} of file {\b config.hpp}.}\par
}
{\xe \v LOG_CONFIG\:config}
{\xe \v config\:LOG_CONFIG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
constexpr auto config::LOG_CONFIG = "C:/Users/Clean/Documents/Uni/JSON2Bat/build/debug-ninja/config/easylogging.conf"{\f2 [inline]}, {\f2 [constexpr]}}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b config.hpp}.}\par
}
{\xe \v MAJOR_VERSION\:config}
{\xe \v config\:MAJOR_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
constexpr auto config::MAJOR_VERSION = "0"{\f2 [inline]}, {\f2 [constexpr]}}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b config.hpp}.}\par
}
{\xe \v MINOR_VERSION\:config}
{\xe \v config\:MINOR_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
constexpr auto config::MINOR_VERSION = "2"{\f2 [inline]}, {\f2 [constexpr]}}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b config.hpp}.}\par
}
{\xe \v PATCH_VERSION\:config}
{\xe \v config\:PATCH_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
constexpr auto config::PATCH_VERSION = "5"{\f2 [inline]}, {\f2 [constexpr]}}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 30} of file {\b config.hpp}.}\par
}
{\xe \v PROJECT_NAME\:config}
{\xe \v config\:PROJECT_NAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
constexpr auto config::PROJECT_NAME = "JSON2Batch"{\f2 [inline]}, {\f2 [constexpr]}}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b config.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
exceptions Namespace Reference\par \pard\plain 
{\tc\tcl2 \v exceptions}
{\xe \v exceptions}
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Namespace used for customized exceptions. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ContainsBadCharacterException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for when a string contains bad characters. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CustomException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all custom exceptions. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FailedToOpenFileException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for when a file can't be opened. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FileExistsException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for an already exisiting outputfile. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b InvalidKeyException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for invalid keys. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b InvalidTypeException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for invalid types. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b InvalidValueException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for an ivalid (usually empty) value field. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MissingKeyException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for missing keys within entries. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MissingTypeException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for missing types of entries. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NoSuchDirException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for when a directory does not exist. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ParsingException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for syntax errors within the json file. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UnreachableCodeException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for when the application reaches code it shouldn't reach. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Namespace used for customized exceptions. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
parsing Namespace Reference\par \pard\plain 
{\tc\tcl2 \v parsing}
{\xe \v parsing}
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The namespace containing everything relevant to parsing. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FileData}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class contains all data from the json file. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b JsonHandler}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file reads all data from the json file. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b KeyValidator}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Validates keys of a Json::Value object. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The namespace containing everything relevant to parsing. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This namespace contains all relevant classes to parsing the json file and creating the batch output.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b JsonHandler} \par
{\b FileData} \par
{\b KeyValidator} \par
{\b BatchCreator} \par
}}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
utilities Namespace Reference\par \pard\plain 
{\tc\tcl2 \v utilities}
{\xe \v utilities}
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Includes all utilities. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Utils}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Responsible for utility function. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Includes all utilities. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This namespace includes the {\b Utils} class with utility functions which can be used throughout the project.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Utils} \par
}}}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BatchCreator Class Reference\par \pard\plain 
{\tc\tcl2 \v BatchCreator}
{\xe \v BatchCreator}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a batch file from a FileData obeject. }}\par
{
{\f2 #include <BatchCreator.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BatchCreator} (std::shared_ptr< {\b parsing::FileData} > {\b fileData})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the {\b BatchCreator}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< std::stringstream > {\b getDataStream} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the stringstream. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createBatch} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates the batch stream. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeStart} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wirtes the start of the batch file. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeHideShell} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes the visibility of the shell. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeCommands} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes the commands to be executed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeEnvVariables} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set's environment variables. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writePathVariables} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set's the path variables. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeApplication} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If an application is given, it is started at the end. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeEnd} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes the end of the batch file. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< std::stringstream > {\b dataStream}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< {\b parsing::FileData} > {\b fileData}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a batch file from a FileData obeject. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uses a FileData object to create a string stream, which can then be streamed into a batch file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
FileData \par
}}}{
Definition at line {\b 29} of file {\b BatchCreator.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v BatchCreator\:BatchCreator}
{\xe \v BatchCreator\:BatchCreator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
BatchCreator::BatchCreator (std::shared_ptr< {\b parsing::FileData} >  {\i fileData}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the {\b BatchCreator}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a stringstream and calls the {\b createBatch()} function\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filenData} \cell }{A shared pointer to the FileData object \cell }
{\row }
}
}{
Definition at line {\b 18} of file {\b BatchCreator.cpp}.}\par
{
\ql
References {\b createBatch()}, and {\b dataStream}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d1c/classBatchCreator_ad2fe34f5fef34f26763558bc9c9949a3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v createBatch\:BatchCreator}
{\xe \v BatchCreator\:createBatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BatchCreator::createBatch () const{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates the batch stream. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< FileData object\par
The method calls all necessary functions to create the stream for the batch file. \par
}{
Definition at line {\b 25} of file {\b BatchCreator.cpp}.}\par
{
\ql
References {\b writeApplication()}, {\b writeCommands()}, {\b writeEnd()}, {\b writeEnvVariables()}, {\b writeHideShell()}, {\b writePathVariables()}, and {\b writeStart()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d1c/classBatchCreator_aca15cd9ed3a90d1f43ac2fd16175c676_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d1c/classBatchCreator_aca15cd9ed3a90d1f43ac2fd16175c676_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getDataStream\:BatchCreator}
{\xe \v BatchCreator\:getDataStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr< std::stringstream > BatchCreator::getDataStream () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the stringstream. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A shared pointer to the stringstream \par
}}}{
Definition at line {\b 46} of file {\b BatchCreator.hpp}.}\par
{
\ql
References {\b dataStream}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d1c/classBatchCreator_abf3164bb6eedfb7062c45ddf445e5965_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v writeApplication\:BatchCreator}
{\xe \v BatchCreator\:writeApplication}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BatchCreator::writeApplication () const{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If an application is given, it is started at the end. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If the key "application" is given in the json file, the application is started at the end of the batch file.{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc16\}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc25\} \par}
}{
Definition at line {\b 81} of file {\b BatchCreator.cpp}.}\par
{
\ql
References {\b dataStream}, and {\b fileData}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d1c/classBatchCreator_ab0c64cf4f8d3bf824bff2762a125315d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v writeCommands\:BatchCreator}
{\xe \v BatchCreator\:writeCommands}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BatchCreator::writeCommands () const{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes the commands to be executed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes the commands to be executed from the FileData object. Those originiate from the "commands" entry in the json file{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc20\}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc22\} \par}
}{
Definition at line {\b 53} of file {\b BatchCreator.cpp}.}\par
{
\ql
References {\b dataStream}, and {\b fileData}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d1c/classBatchCreator_a7ea2646254825e194f831d98ae703ec8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v writeEnd\:BatchCreator}
{\xe \v BatchCreator\:writeEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BatchCreator::writeEnd () const{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes the end of the batch file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes the end of the batch file, which is always the same:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
@ECHO ON \par}
}{
Definition at line {\b 99} of file {\b BatchCreator.cpp}.}\par
{
\ql
References {\b dataStream}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d1c/classBatchCreator_a8d7aab76f68225bc13cdcb41035f5319_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v writeEnvVariables\:BatchCreator}
{\xe \v BatchCreator\:writeEnvVariables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BatchCreator::writeEnvVariables () const{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set's environment variables. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set's the envirment variables for the batch. Those originiate from the "ENV" entry in the json file with the following syntax:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Entry under "key" = Entry under "value"\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc20\}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc21\} \par}
}{
Definition at line {\b 62} of file {\b BatchCreator.cpp}.}\par
{
\ql
References {\b dataStream}, and {\b fileData}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d1c/classBatchCreator_a31d22f486b3608cdae0b7488fb3857a8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v writeHideShell\:BatchCreator}
{\xe \v BatchCreator\:writeHideShell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BatchCreator::writeHideShell () const{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes the visibility of the shell. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This hides/shows the shell after the batch file has been executed{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc19\} \par}
}{
Definition at line {\b 42} of file {\b BatchCreator.cpp}.}\par
{
\ql
References {\b dataStream}, and {\b fileData}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d1c/classBatchCreator_a163015c1e797677466c7cf1c19662b35_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v writePathVariables\:BatchCreator}
{\xe \v BatchCreator\:writePathVariables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BatchCreator::writePathVariables () const{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set's the path variables. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set's the path variables for the batch. Those originiate from the "PATH" entry in the json file{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc20\}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc23\} \par}
}{
Definition at line {\b 70} of file {\b BatchCreator.cpp}.}\par
{
\ql
References {\b dataStream}, and {\b fileData}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d1c/classBatchCreator_a0d08fe331105e1f2dd0ea56d12e86887_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v writeStart\:BatchCreator}
{\xe \v BatchCreator\:writeStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BatchCreator::writeStart () const{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wirtes the start of the batch file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes the start of the batch file, which is always the same:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
setzt ECHO off\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
startet cmd.exe \par}
}{
Definition at line {\b 36} of file {\b BatchCreator.cpp}.}\par
{
\ql
References {\b dataStream}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d1c/classBatchCreator_a5b0d5ddd55e65bdce910a010deb7847d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dataStream\:BatchCreator}
{\xe \v BatchCreator\:dataStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr<std::stringstream> BatchCreator::dataStream{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 52} of file {\b BatchCreator.hpp}.}\par
}
{\xe \v fileData\:BatchCreator}
{\xe \v BatchCreator\:fileData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr<{\b parsing::FileData}> BatchCreator::fileData{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< stringstream for the batch file \par
}{
Definition at line {\b 54} of file {\b BatchCreator.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b BatchCreator.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/sources/{\b BatchCreator.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cli::CommandLineHandler Class Reference\par \pard\plain 
{\tc\tcl2 \v cli::CommandLineHandler}
{\xe \v cli::CommandLineHandler}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Responsible for the Command Line Interface. }}\par
{
{\f2 #include <CommandLineHandler.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CommandLineHandler} ()=delete\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Constructor of the {\b CommandLineHandler} Class. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CommandLineHandler} ()=delete\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Destructor of the {\b CommandLineHandler} Class. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b printHelp} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the help message. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b printVersion} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the version message. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b printCredits} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the credits message. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::tuple< std::optional< std::string >, std::vector< std::string > > {\b parseArguments} (int argc, char *argv[])\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses the Command Line Arguments. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Responsible for the Command Line Interface. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is responsible for parsing the command line arguments, printing Help/Version/Credits messages and returning inputted files.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Simon Blum \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2024-04-18 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0.1.5 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b options} \par
}}}{
Definition at line {\b 56} of file {\b CommandLineHandler.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CommandLineHandler\:cli::CommandLineHandler}
{\xe \v cli::CommandLineHandler\:CommandLineHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cli::CommandLineHandler::CommandLineHandler (){\f2 [delete]}}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Constructor of the {\b CommandLineHandler} Class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
As all functions are static it should not be used and as such is deleted. \par
}}}}
{\xe \v ~CommandLineHandler\:cli::CommandLineHandler}
{\xe \v cli::CommandLineHandler\:~CommandLineHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cli::CommandLineHandler::~CommandLineHandler (){\f2 [delete]}}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Destructor of the {\b CommandLineHandler} Class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
As all functions are static it should not be used and as such is deleted. \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v parseArguments\:cli::CommandLineHandler}
{\xe \v cli::CommandLineHandler\:parseArguments}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::tuple< std::optional< std::string >, std::vector< std::string > > cli::CommandLineHandler::parseArguments (int  {\i argc}, char *  {\i argv}[]){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses the Command Line Arguments. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function uses the "getopt.h" library to parse all options given and then returns all files which are given as arguments.{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc4\}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc5\}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqNonFunc4\}\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i argc} \cell }{The number of arguments given \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i argv} \cell }{The arguments given\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Returns a tuple containing the output directory and the files \par
}}}{
Definition at line {\b 69} of file {\b CommandLineHandler.cpp}.}\par
{
\ql
References {\b printCredits()}, {\b printHelp()}, and {\b printVersion()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d06/classcli_1_1CommandLineHandler_acb2f456a899bdbf41772b1ccf03d4ca8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d06/classcli_1_1CommandLineHandler_acb2f456a899bdbf41772b1ccf03d4ca8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printCredits\:cli::CommandLineHandler}
{\xe \v cli::CommandLineHandler\:printCredits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cli::CommandLineHandler::printCredits (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the credits message. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc3\}\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This function ends the application. \par
}}}{
Definition at line {\b 50} of file {\b CommandLineHandler.cpp}.}\par
{
\ql
References {\b config::AUTHORS}, {\b config::DESCRIPTION}, {\b config::HOMEPAGE_URL}, {\b config::MAJOR_VERSION}, {\b config::MINOR_VERSION}, {\b config::PATCH_VERSION}, and {\b config::PROJECT_NAME}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d06/classcli_1_1CommandLineHandler_ac1613613eb4f4534ee55aba547a2a470_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printHelp\:cli::CommandLineHandler}
{\xe \v cli::CommandLineHandler\:printHelp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cli::CommandLineHandler::printHelp (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the help message. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc1\}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc2\}\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This function ends the application. \par
}}}{
Definition at line {\b 22} of file {\b CommandLineHandler.cpp}.}\par
{
\ql
References {\b config::EXECUTABLE_NAME}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d06/classcli_1_1CommandLineHandler_ac81856dd50394363675207068213d960_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printVersion\:cli::CommandLineHandler}
{\xe \v cli::CommandLineHandler\:printVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cli::CommandLineHandler::printVersion (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the version message. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This function ends the application. \par
}}}{
Definition at line {\b 44} of file {\b CommandLineHandler.cpp}.}\par
{
\ql
References {\b config::MAJOR_VERSION}, {\b config::MINOR_VERSION}, {\b config::PATCH_VERSION}, and {\b config::PROJECT_NAME}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d06/classcli_1_1CommandLineHandler_a12afc8cab2af137f31c6aae2d1b27061_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b CommandLineHandler.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/sources/{\b CommandLineHandler.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
exceptions::ContainsBadCharacterException Class Reference\par \pard\plain 
{\tc\tcl2 \v exceptions::ContainsBadCharacterException}
{\xe \v exceptions::ContainsBadCharacterException}
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for when a string contains bad characters. }}\par
{
{\f2 #include <Exceptions.hpp>}}\par
Inheritance diagram for exceptions::ContainsBadCharacterException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/df1/classexceptions_1_1ContainsBadCharacterException__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for exceptions::ContainsBadCharacterException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/dd8/classexceptions_1_1ContainsBadCharacterException__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ContainsBadCharacterException} (const std::string &value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b exceptions::CustomException}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b message}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for when a string contains bad characters. \par
}{
Definition at line {\b 295} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ContainsBadCharacterException\:exceptions::ContainsBadCharacterException}
{\xe \v exceptions::ContainsBadCharacterException\:ContainsBadCharacterException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
exceptions::ContainsBadCharacterException::ContainsBadCharacterException (const std::string &  {\i value}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 300} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v what\:exceptions::ContainsBadCharacterException}
{\xe \v exceptions::ContainsBadCharacterException\:what}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * exceptions::ContainsBadCharacterException::what () const{\f2 [inline]}, {\f2 [override]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 304} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v message\:exceptions::ContainsBadCharacterException}
{\xe \v exceptions::ContainsBadCharacterException\:message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string exceptions::ContainsBadCharacterException::message{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 297} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b Exceptions.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
exceptions::CustomException Class Reference\par \pard\plain 
{\tc\tcl2 \v exceptions::CustomException}
{\xe \v exceptions::CustomException}
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all custom exceptions. }}\par
{
{\f2 #include <Exceptions.hpp>}}\par
Inheritance diagram for exceptions::CustomException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d80/classexceptions_1_1CustomException__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for exceptions::CustomException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/dd4/classexceptions_1_1CustomException__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all custom exceptions. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is the base class which is inherited by all custom exceptions. It can be used to catch all exceptions that are thrown by us.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
std::exception \par
}}}{
Definition at line {\b 35} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v what\:exceptions::CustomException}
{\xe \v exceptions::CustomException\:what}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * exceptions::CustomException::what () const{\f2 [inline]}, {\f2 [override]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 37} of file {\b Exceptions.hpp}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d56/classexceptions_1_1CustomException_a128c3c054a385cda67e271d2064b0d1f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b Exceptions.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
exceptions::FailedToOpenFileException Class Reference\par \pard\plain 
{\tc\tcl2 \v exceptions::FailedToOpenFileException}
{\xe \v exceptions::FailedToOpenFileException}
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for when a file can't be opened. }}\par
{
{\f2 #include <Exceptions.hpp>}}\par
Inheritance diagram for exceptions::FailedToOpenFileException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d30/classexceptions_1_1FailedToOpenFileException__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for exceptions::FailedToOpenFileException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d1d/classexceptions_1_1FailedToOpenFileException__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FailedToOpenFileException} (const std::string &file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b exceptions::CustomException}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b message}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for when a file can't be opened. \par
}{
Definition at line {\b 259} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FailedToOpenFileException\:exceptions::FailedToOpenFileException}
{\xe \v exceptions::FailedToOpenFileException\:FailedToOpenFileException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
exceptions::FailedToOpenFileException::FailedToOpenFileException (const std::string &  {\i file}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 264} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v what\:exceptions::FailedToOpenFileException}
{\xe \v exceptions::FailedToOpenFileException\:what}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * exceptions::FailedToOpenFileException::what () const{\f2 [inline]}, {\f2 [override]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 268} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v message\:exceptions::FailedToOpenFileException}
{\xe \v exceptions::FailedToOpenFileException\:message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string exceptions::FailedToOpenFileException::message{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 261} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b Exceptions.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
parsing::FileData Class Reference\par \pard\plain 
{\tc\tcl2 \v parsing::FileData}
{\xe \v parsing::FileData}
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class contains all data from the json file. }}\par
{
{\f2 #include <FileData.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOutputFile} (std::string &newOutputfile)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setter for this->outputfile. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setHideShell} (bool newHideShell)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setter for this->hideshell. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setApplication} (const std::string &newApplication)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setter for this->application. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addCommand} (const std::string &command)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a given command to this->commands. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addEnvironmentVariable} (const std::string &name, const std::string &value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a given tuple to this->environmentVariables. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addPathValue} (const std::string &pathValue)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add's a given value to this->pathValues. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string & {\b getOutputFile} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Getter for this->outputfile. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getHideShell} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Getter for this->hideShell. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::optional< std::string > & {\b getApplication} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Getter for this->application. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::vector< std::string > & {\b getCommands} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Getter for this->commands. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::vector< std::tuple< std::string, std::string > > & {\b getEnvironmentVariables} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Getter for this->environmentVariables. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::vector< std::string > & {\b getPathValues} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Getter for this->pathValues. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b outputfile}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b hideShell}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::optional< std::string > {\b application}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::string > {\b commands}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::tuple< std::string, std::string > > {\b environmentVariables}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::string > {\b pathValues}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class contains all data from the json file. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The data from the json file is parsed by the {\b JsonHandler} and then assigned to the attributes of an instance of this class. This class also handles a part of the error handling.{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc14\} \par}
\par
}{
Definition at line {\b 32} of file {\b FileData.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addCommand\:parsing::FileData}
{\xe \v parsing::FileData\:addCommand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void parsing::FileData::addCommand (const std::string &  {\i command})}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a given command to this->commands. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes sure, that the given command value is not empty and then add's it to the commands attribute.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i command} \cell }{The command to be added\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b exceptions::InvalidValueException}} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 56} of file {\b FileData.cpp}.}\par
{
\ql
References {\b commands}.}\par
}
{\xe \v addEnvironmentVariable\:parsing::FileData}
{\xe \v parsing::FileData\:addEnvironmentVariable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void parsing::FileData::addEnvironmentVariable (const std::string &  {\i name}, const std::string &  {\i value})}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a given tuple to this->environmentVariables. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes sure that neither the key nor the value is empty and then adds a tuple with both values to the environmentVariables attribute\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{The name of the env variable \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{The value of the env variable\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b exceptions::InvalidValueException}} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 67} of file {\b FileData.cpp}.}\par
{
\ql
References {\b environmentVariables}.}\par
}
{\xe \v addPathValue\:parsing::FileData}
{\xe \v parsing::FileData\:addPathValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void parsing::FileData::addPathValue (const std::string &  {\i pathValue})}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add's a given value to this->pathValues. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes sure that the given value is not empty and then assigns it to the given pathValues attribute\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pathValue} \cell }{The value to be added\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b exceptions::InvalidValueException}} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 83} of file {\b FileData.cpp}.}\par
{
\ql
References {\b pathValues}.}\par
}
{\xe \v getApplication\:parsing::FileData}
{\xe \v parsing::FileData\:getApplication}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::optional< std::string > & parsing::FileData::getApplication () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Getter for this->application. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The assigned application \par
}}}{
Definition at line {\b 122} of file {\b FileData.hpp}.}\par
{
\ql
References {\b application}.}\par
}
{\xe \v getCommands\:parsing::FileData}
{\xe \v parsing::FileData\:getCommands}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::vector< std::string > & parsing::FileData::getCommands () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Getter for this->commands. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The vector of assigned commands \par
}}}{
Definition at line {\b 130} of file {\b FileData.hpp}.}\par
{
\ql
References {\b commands}.}\par
}
{\xe \v getEnvironmentVariables\:parsing::FileData}
{\xe \v parsing::FileData\:getEnvironmentVariables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::vector< std::tuple< std::string, std::string > > & parsing::FileData::getEnvironmentVariables () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Getter for this->environmentVariables. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The vector of assigned env variables \par
}}}{
Definition at line {\b 139} of file {\b FileData.hpp}.}\par
{
\ql
References {\b environmentVariables}.}\par
}
{\xe \v getHideShell\:parsing::FileData}
{\xe \v parsing::FileData\:getHideShell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool parsing::FileData::getHideShell () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Getter for this->hideShell. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The assigned value for hideshell \par
}}}{
Definition at line {\b 114} of file {\b FileData.hpp}.}\par
{
\ql
References {\b hideShell}.}\par
}
{\xe \v getOutputFile\:parsing::FileData}
{\xe \v parsing::FileData\:getOutputFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string & parsing::FileData::getOutputFile () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Getter for this->outputfile. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The assigned outputfile \par
}}}{
Definition at line {\b 106} of file {\b FileData.hpp}.}\par
{
\ql
References {\b outputfile}.}\par
}
{\xe \v getPathValues\:parsing::FileData}
{\xe \v parsing::FileData\:getPathValues}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::vector< std::string > & parsing::FileData::getPathValues () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Getter for this->pathValues. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The vector of assigned pathValues \par
}}}{
Definition at line {\b 147} of file {\b FileData.hpp}.}\par
{
\ql
References {\b pathValues}.}\par
}
{\xe \v setApplication\:parsing::FileData}
{\xe \v parsing::FileData\:setApplication}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void parsing::FileData::setApplication (const std::string &  {\i newApplication})}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setter for this->application. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set's the application attribute. Return's if the given string is empty.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i newApplication} \cell }{THe application to be set \cell }
{\row }
}
}{
Definition at line {\b 46} of file {\b FileData.cpp}.}\par
{
\ql
References {\b application}.}\par
}
{\xe \v setHideShell\:parsing::FileData}
{\xe \v parsing::FileData\:setHideShell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void parsing::FileData::setHideShell (bool  {\i newHideShell}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setter for this->hideshell. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i newHideShell} \cell }{The hideshell value to be set \cell }
{\row }
}
}{
Definition at line {\b 50} of file {\b FileData.hpp}.}\par
{
\ql
References {\b hideShell}.}\par
}
{\xe \v setOutputFile\:parsing::FileData}
{\xe \v parsing::FileData\:setOutputFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void parsing::FileData::setOutputFile (std::string &  {\i newOutputfile})}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setter for this->outputfile. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks that neither the given string is empty, nor that the outputfile is already set and then assigns the newOutputfile to the instance.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i newOutputfile} \cell }{The outputfile to be set\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b exceptions::InvalidValueException}} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 18} of file {\b FileData.cpp}.}\par
{
\ql
References {\b outputfile}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v application\:parsing::FileData}
{\xe \v parsing::FileData\:application}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::optional<std::string> parsing::FileData::application{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 154} of file {\b FileData.hpp}.}\par
}
{\xe \v commands\:parsing::FileData}
{\xe \v parsing::FileData\:commands}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<std::string> parsing::FileData::commands{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 156} of file {\b FileData.hpp}.}\par
}
{\xe \v environmentVariables\:parsing::FileData}
{\xe \v parsing::FileData\:environmentVariables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<std::tuple<std::string, std::string> > parsing::FileData::environmentVariables{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 158} of file {\b FileData.hpp}.}\par
}
{\xe \v hideShell\:parsing::FileData}
{\xe \v parsing::FileData\:hideShell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool parsing::FileData::hideShell{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 153} of file {\b FileData.hpp}.}\par
}
{\xe \v outputfile\:parsing::FileData}
{\xe \v parsing::FileData\:outputfile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string parsing::FileData::outputfile{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 152} of file {\b FileData.hpp}.}\par
}
{\xe \v pathValues\:parsing::FileData}
{\xe \v parsing::FileData\:pathValues}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<std::string> parsing::FileData::pathValues{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 160} of file {\b FileData.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b FileData.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/sources/{\b FileData.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
exceptions::FileExistsException Class Reference\par \pard\plain 
{\tc\tcl2 \v exceptions::FileExistsException}
{\xe \v exceptions::FileExistsException}
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for an already exisiting outputfile. }}\par
{
{\f2 #include <Exceptions.hpp>}}\par
Inheritance diagram for exceptions::FileExistsException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d44/classexceptions_1_1FileExistsException__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for exceptions::FileExistsException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d27/classexceptions_1_1FileExistsException__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FileExistsException} (const std::string &{\b file})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b exceptions::CustomException}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b file}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b message}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for an already exisiting outputfile. \par
}{
Definition at line {\b 74} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FileExistsException\:exceptions::FileExistsException}
{\xe \v exceptions::FileExistsException\:FileExistsException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
exceptions::FileExistsException::FileExistsException (const std::string &  {\i file}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
I planned to use std::format, however it seems that the required Compiler Version is not yet available in the stable Ubuntu Repo!\par
}}}{
Definition at line {\b 80} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b file}, and {\b message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v what\:exceptions::FileExistsException}
{\xe \v exceptions::FileExistsException\:what}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * exceptions::FileExistsException::what () const{\f2 [inline]}, {\f2 [override]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 92} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v file\:exceptions::FileExistsException}
{\xe \v exceptions::FileExistsException\:file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string exceptions::FileExistsException::file{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 76} of file {\b Exceptions.hpp}.}\par
}
{\xe \v message\:exceptions::FileExistsException}
{\xe \v exceptions::FileExistsException\:message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string exceptions::FileExistsException::message{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 77} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b Exceptions.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
exceptions::InvalidKeyException Class Reference\par \pard\plain 
{\tc\tcl2 \v exceptions::InvalidKeyException}
{\xe \v exceptions::InvalidKeyException}
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for invalid keys. }}\par
{
{\f2 #include <Exceptions.hpp>}}\par
Inheritance diagram for exceptions::InvalidKeyException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d87/classexceptions_1_1InvalidKeyException__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for exceptions::InvalidKeyException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/dbc/classexceptions_1_1InvalidKeyException__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InvalidKeyException} (const std::vector< std::tuple< int, std::string > > &keys)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b exceptions::CustomException}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b message} = "Invalid key found!"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for invalid keys. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This exception is thrown when a key is found within the json file, that is not part of the valid keys. It will also display the name and the line of the invalid key.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b parsing::KeyValidator::validKeys} \par
{\b parsing::KeyValidator::validEntryKeys} \par
}}}{
Definition at line {\b 135} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v InvalidKeyException\:exceptions::InvalidKeyException}
{\xe \v exceptions::InvalidKeyException\:InvalidKeyException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
exceptions::InvalidKeyException::InvalidKeyException (const std::vector< std::tuple< int, std::string > > &  {\i keys}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 140} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v what\:exceptions::InvalidKeyException}
{\xe \v exceptions::InvalidKeyException\:what}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * exceptions::InvalidKeyException::what () const{\f2 [inline]}, {\f2 [override]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 149} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v message\:exceptions::InvalidKeyException}
{\xe \v exceptions::InvalidKeyException\:message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string exceptions::InvalidKeyException::message = "Invalid key found!"{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 137} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b Exceptions.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
exceptions::InvalidTypeException Class Reference\par \pard\plain 
{\tc\tcl2 \v exceptions::InvalidTypeException}
{\xe \v exceptions::InvalidTypeException}
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for invalid types. }}\par
{
{\f2 #include <Exceptions.hpp>}}\par
Inheritance diagram for exceptions::InvalidTypeException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/ddd/classexceptions_1_1InvalidTypeException__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for exceptions::InvalidTypeException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d3f/classexceptions_1_1InvalidTypeException__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InvalidTypeException} (const std::string &{\b type}, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b exceptions::CustomException}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b message}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for invalid types. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This exception is thrown when the value of the "type" field within the entries is invalid (not "EXE", "PATH", "ENV"). It also prints the type and the line of the invalid type. \par
}{
Definition at line {\b 162} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v InvalidTypeException\:exceptions::InvalidTypeException}
{\xe \v exceptions::InvalidTypeException\:InvalidTypeException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
exceptions::InvalidTypeException::InvalidTypeException (const std::string &  {\i type}, int  {\i line}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
I planned to use std::format, however it seems that the required Compiler Version is not yet available in the stable Ubuntu Repo!\par
}}}{
Definition at line {\b 168} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b message}, and {\b type}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v what\:exceptions::InvalidTypeException}
{\xe \v exceptions::InvalidTypeException\:what}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * exceptions::InvalidTypeException::what () const{\f2 [inline]}, {\f2 [override]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 179} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v message\:exceptions::InvalidTypeException}
{\xe \v exceptions::InvalidTypeException\:message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string exceptions::InvalidTypeException::message{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 165} of file {\b Exceptions.hpp}.}\par
}
{\xe \v type\:exceptions::InvalidTypeException}
{\xe \v exceptions::InvalidTypeException\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string exceptions::InvalidTypeException::type{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 164} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b Exceptions.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
exceptions::InvalidValueException Class Reference\par \pard\plain 
{\tc\tcl2 \v exceptions::InvalidValueException}
{\xe \v exceptions::InvalidValueException}
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for an ivalid (usually empty) value field. }}\par
{
{\f2 #include <Exceptions.hpp>}}\par
Inheritance diagram for exceptions::InvalidValueException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/de7/classexceptions_1_1InvalidValueException__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for exceptions::InvalidValueException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d47/classexceptions_1_1InvalidValueException__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InvalidValueException} (const std::string &{\b key}, const std::string &issue)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b exceptions::CustomException}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b key}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b message}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for an ivalid (usually empty) value field. \par
}{
Definition at line {\b 101} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v InvalidValueException\:exceptions::InvalidValueException}
{\xe \v exceptions::InvalidValueException\:InvalidValueException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
exceptions::InvalidValueException::InvalidValueException (const std::string &  {\i key}, const std::string &  {\i issue}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
I planned to use std::format, however it seems that the required Compiler Version is not yet available in the stable Ubuntu Repo!\par
}}}{
Definition at line {\b 107} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b key}, and {\b message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v what\:exceptions::InvalidValueException}
{\xe \v exceptions::InvalidValueException\:what}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * exceptions::InvalidValueException::what () const{\f2 [inline]}, {\f2 [override]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 119} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v key\:exceptions::InvalidValueException}
{\xe \v exceptions::InvalidValueException\:key}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string exceptions::InvalidValueException::key{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 103} of file {\b Exceptions.hpp}.}\par
}
{\xe \v message\:exceptions::InvalidValueException}
{\xe \v exceptions::InvalidValueException\:message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string exceptions::InvalidValueException::message{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 104} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b Exceptions.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
parsing::JsonHandler Class Reference\par \pard\plain 
{\tc\tcl2 \v parsing::JsonHandler}
{\xe \v parsing::JsonHandler}
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file reads all data from the json file. }}\par
{
{\f2 #include <JsonHandler.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b JsonHandler} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor without arguments. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b JsonHandler} (const std::string &filename)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< {\b FileData} > {\b getFileData} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve the data from the json file. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b assignOutputFile} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assigns the outputfile to this->data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b assignHideShell} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assigns the hideshell value to this->data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b assignApplication} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assigns application to this->data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b assignEntries} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assigns entries to this->data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b assignCommand} (const Json::Value &entry) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assigns an command to this->data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b assignEnvironmentVariable} (const Json::Value &entry) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assigns an environmentVariable to this->data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b assignPathValue} (const Json::Value &entry) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assigns a path value to this->data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< {\b FileData} > {\b createFileData} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates the {\b FileData} instance. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::shared_ptr< Json::Value > {\b parseFile} (const std::string &filename)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses the given json file. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b containsBadCharacter} (const std::string_view &str)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if a string contains a bad character. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< Json::Value > {\b root}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< {\b FileData} > {\b data}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file reads all data from the json file. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file uses the jsoncpp library to parse all data from a json file, validate it to some degree.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 https://github.com/open-source-parsers/jsoncpp} \par
}}}{
Definition at line {\b 47} of file {\b JsonHandler.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v JsonHandler\:parsing::JsonHandler}
{\xe \v parsing::JsonHandler\:JsonHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
parsing::JsonHandler::JsonHandler (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor without arguments. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor can be used to initialise an instance in an outer scope and then assign it values from an inner scope. \par
}{
Definition at line {\b 55} of file {\b JsonHandler.hpp}.}\par
}
{\xe \v JsonHandler\:parsing::JsonHandler}
{\xe \v parsing::JsonHandler\:JsonHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
parsing::JsonHandler::JsonHandler (const std::string &  {\i filename}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constructor calls this->{\b parseFile()} when called.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{Name of the json file \cell }
{\row }
}
}{
Definition at line {\b 23} of file {\b JsonHandler.cpp}.}\par
{
\ql
References {\b parseFile()}, and {\b root}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/da0/classparsing_1_1JsonHandler_a678af0a2e0668f9e47b14dfdb4d954e4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v assignApplication\:parsing::JsonHandler}
{\xe \v parsing::JsonHandler\:assignApplication}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void parsing::JsonHandler::assignApplication () const{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assigns application to this->data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the value of the application key from Json::Value this->root and defaults to an empty string.{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc16\} \par}
}{
Definition at line {\b 84} of file {\b JsonHandler.cpp}.}\par
{
\ql
References {\b containsBadCharacter()}, {\b data}, {\b utilities::Utils::escapeString()}, and {\b root}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/da0/classparsing_1_1JsonHandler_a6c3c29dc32baa0d2391bab88f48113ab_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/da0/classparsing_1_1JsonHandler_a6c3c29dc32baa0d2391bab88f48113ab_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v assignCommand\:parsing::JsonHandler}
{\xe \v parsing::JsonHandler\:assignCommand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void parsing::JsonHandler::assignCommand (const Json::Value &  {\i entry}) const{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assigns an command to this->data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc12\} {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i entry} \cell }{The entry with the command \cell }
{\row }
}
}
}{
Definition at line {\b 118} of file {\b JsonHandler.cpp}.}\par
{
\ql
References {\b containsBadCharacter()}, {\b data}, and {\b utilities::Utils::escapeString()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/da0/classparsing_1_1JsonHandler_a07f65d3a7c307cc78416fa5eaaf32301_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/da0/classparsing_1_1JsonHandler_a07f65d3a7c307cc78416fa5eaaf32301_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v assignEntries\:parsing::JsonHandler}
{\xe \v parsing::JsonHandler\:assignEntries}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void parsing::JsonHandler::assignEntries () const{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assigns entries to this->data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Goes through each of the entries from Json::Value this->root and calls the relevant method depending on it's type. All "type" keys should be valid by this point.{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc10\}\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i entry} \cell }{Json::Value containing an array with entries\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b exceptions::UnreachableCodeException}} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 94} of file {\b JsonHandler.cpp}.}\par
{
\ql
References {\b assignCommand()}, {\b assignEnvironmentVariable()}, {\b assignPathValue()}, and {\b root}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/da0/classparsing_1_1JsonHandler_ac4477431b9d1cf1d19eaa1b60066c9f7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/da0/classparsing_1_1JsonHandler_ac4477431b9d1cf1d19eaa1b60066c9f7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v assignEnvironmentVariable\:parsing::JsonHandler}
{\xe \v parsing::JsonHandler\:assignEnvironmentVariable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void parsing::JsonHandler::assignEnvironmentVariable (const Json::Value &  {\i entry}) const{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assigns an environmentVariable to this->data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc11\} {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i entry} \cell }{The entry with the environmentVariable \cell }
{\row }
}
}
}{
Definition at line {\b 128} of file {\b JsonHandler.cpp}.}\par
{
\ql
References {\b containsBadCharacter()}, {\b data}, and {\b utilities::Utils::escapeString()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/da0/classparsing_1_1JsonHandler_a12eaca263d111378d01254a5ec54a011_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/da0/classparsing_1_1JsonHandler_a12eaca263d111378d01254a5ec54a011_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v assignHideShell\:parsing::JsonHandler}
{\xe \v parsing::JsonHandler\:assignHideShell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void parsing::JsonHandler::assignHideShell () const{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assigns the hideshell value to this->data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the value of the hideshell key from Json::Value this->root and defaults to negative.{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc9\} \par}
}{
Definition at line {\b 78} of file {\b JsonHandler.cpp}.}\par
{
\ql
References {\b data}, and {\b root}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/da0/classparsing_1_1JsonHandler_a525768e8f0f99da0aec60bc2ebfabdf6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v assignOutputFile\:parsing::JsonHandler}
{\xe \v parsing::JsonHandler\:assignOutputFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void parsing::JsonHandler::assignOutputFile () const{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assigns the outputfile to this->data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the outputfile from Json::Value this->root and makes sure, that the file doesn't already exist.{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc8\}\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b exceptions::FileExistsException}} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 68} of file {\b JsonHandler.cpp}.}\par
{
\ql
References {\b containsBadCharacter()}, {\b data}, {\b utilities::Utils::escapeString()}, and {\b root}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/da0/classparsing_1_1JsonHandler_a5a3ad5a6d39261a60bfd1f1ee827a378_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/da0/classparsing_1_1JsonHandler_a5a3ad5a6d39261a60bfd1f1ee827a378_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v assignPathValue\:parsing::JsonHandler}
{\xe \v parsing::JsonHandler\:assignPathValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void parsing::JsonHandler::assignPathValue (const Json::Value &  {\i entry}) const{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assigns a path value to this->data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc13\} {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i entry} \cell }{The entry with the path value \cell }
{\row }
}
}
}{
Definition at line {\b 144} of file {\b JsonHandler.cpp}.}\par
{
\ql
References {\b containsBadCharacter()}, {\b data}, and {\b utilities::Utils::escapeString()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/da0/classparsing_1_1JsonHandler_af760051928630de9de67760cfd70fa4e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/da0/classparsing_1_1JsonHandler_af760051928630de9de67760cfd70fa4e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v containsBadCharacter\:parsing::JsonHandler}
{\xe \v parsing::JsonHandler\:containsBadCharacter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool parsing::JsonHandler::containsBadCharacter (const std::string_view &  {\i str}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if a string contains a bad character. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method checks if a given string contains a bad character. Bad characters are declared in a set within the function. This is done to ensure, that no characters such as line breaks, break the later generated batch file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i str} \cell }{The string to be checked\cell }
{\row }
}
@bool If the string contains a bad char or not \par
}{
Definition at line {\b 154} of file {\b JsonHandler.cpp}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/da0/classparsing_1_1JsonHandler_aeb38cabfc353dd3b8b4c87772a670255_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v createFileData\:parsing::JsonHandler}
{\xe \v parsing::JsonHandler\:createFileData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr< {\b FileData} > parsing::JsonHandler::createFileData (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates the {\b FileData} instance. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates the {\b FileData} instance, calls all nessecary functions and returns a shared pointer to it.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Pointer to the created instance of {\b FileData} \par
}}}{
Definition at line {\b 58} of file {\b JsonHandler.cpp}.}\par
{
\ql
References {\b assignApplication()}, {\b assignEntries()}, {\b assignHideShell()}, {\b assignOutputFile()}, and {\b data}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/da0/classparsing_1_1JsonHandler_a9e765c81ea918e5eb84811ac929d8f24_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/da0/classparsing_1_1JsonHandler_a9e765c81ea918e5eb84811ac929d8f24_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getFileData\:parsing::JsonHandler}
{\xe \v parsing::JsonHandler\:getFileData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr< {\b FileData} > parsing::JsonHandler::getFileData ()}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve the data from the json file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method calls this->{\b createFileData()} needed to retrieve the values from the Json::Value this->root and then returns a shared pointer to the created {\b FileData} object.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Pointer to the {\b FileData} Object with the parsed data from json \par
}}}{
Definition at line {\b 53} of file {\b JsonHandler.cpp}.}\par
{
\ql
References {\b createFileData()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/da0/classparsing_1_1JsonHandler_a1556262084d8fc4f75c25ec8344180b7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/da0/classparsing_1_1JsonHandler_a1556262084d8fc4f75c25ec8344180b7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v parseFile\:parsing::JsonHandler}
{\xe \v parsing::JsonHandler\:parseFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr< Json::Value > parsing::JsonHandler::parseFile (const std::string &  {\i filename}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses the given json file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method first creates a new Json::Value instance and then tries to parse the given json file. It then validates the keys of the instance using the {\b KeyValidator} class.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{The name of the file wich should be parsed \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A shared pointer to the Json::Value instance\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b KeyValidator::validateKeys()}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b exceptions::ParsingException}} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b exceptions::InvalidKeyException}} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 28} of file {\b JsonHandler.cpp}.}\par
{
\ql
References {\b parsing::KeyValidator::getInstance()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/da0/classparsing_1_1JsonHandler_a9a56ef8d2c4f19e714e61b5bf33cf5bd_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/da0/classparsing_1_1JsonHandler_a9a56ef8d2c4f19e714e61b5bf33cf5bd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v data\:parsing::JsonHandler}
{\xe \v parsing::JsonHandler\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr<{\b FileData}> parsing::JsonHandler::data{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 179} of file {\b JsonHandler.hpp}.}\par
}
{\xe \v root\:parsing::JsonHandler}
{\xe \v parsing::JsonHandler\:root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr<Json::Value> parsing::JsonHandler::root{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 178} of file {\b JsonHandler.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b JsonHandler.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/sources/{\b JsonHandler.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
parsing::KeyValidator Class Reference\par \pard\plain 
{\tc\tcl2 \v parsing::KeyValidator}
{\xe \v parsing::KeyValidator}
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Validates keys of a Json::Value object. }}\par
{
{\f2 #include <KeyValidator.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::tuple< int, std::string > > {\b validateKeys} (const Json::Value &root, const std::string &filename)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Validate keys off a Json::Value object. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b KeyValidator} & {\b getInstance} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the instance of this class. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::tuple< int, std::string > > {\b getWrongKeys} (const Json::Value &root, const std::string &filename) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve the wrong keys from a Json::Value object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b validateTypes} (const std::string &filename, const Json::Value &entry, const std::unordered_set< std::string > &entryKeys)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Validates types from the entries array. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::tuple< int, std::string > > {\b validateEntries} (const std::string &filename, const std::unordered_set< std::string > &entryKeys) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Validates that keys within the entries array are valid. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::optional< int > {\b getUnknownKeyLine} (const std::string &filename, const std::string &wrongKey)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the line of an unknown key. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::unordered_set< std::string > {\b validKeys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::unordered_set< std::string > {\b validEntryKeys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::unordered_map< std::string_view, std::vector< std::string > > {\b typeToKeys}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Validates keys of a Json::Value object. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is singleton. That way when multiple files are parsed with the application, the maps for valid keys and the set for the type entries field only have to be allocated once when parsing multiple files.{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc17\} \par}
\par
}{
Definition at line {\b 31} of file {\b KeyValidator.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getInstance\:parsing::KeyValidator}
{\xe \v parsing::KeyValidator\:getInstance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b KeyValidator} & parsing::KeyValidator::getInstance (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the instance of this class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Reference to the instance of this class \par
}}}{
Definition at line {\b 20} of file {\b KeyValidator.cpp}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d86/classparsing_1_1KeyValidator_aba12d17ab5dc7faacdcb3cd85b696fda_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getUnknownKeyLine\:parsing::KeyValidator}
{\xe \v parsing::KeyValidator\:getUnknownKeyLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::optional< int > parsing::KeyValidator::getUnknownKeyLine (const std::string &  {\i filename}, const std::string &  {\i wrongKey}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the line of an unknown key. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method goes through each line of the given file and checks if the line contains the given key. Returns std::nullopt if the file can't be opened or the key was not found.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{The filename which should contain the key \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i wrongKey} \cell }{The key to be searched for\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The line of the key, if it was found \par
}}}{
Definition at line {\b 133} of file {\b KeyValidator.cpp}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d86/classparsing_1_1KeyValidator_ac74432064cff4fd80b3c54fa588da65e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getWrongKeys\:parsing::KeyValidator}
{\xe \v parsing::KeyValidator\:getWrongKeys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< std::tuple< int, std::string > > parsing::KeyValidator::getWrongKeys (const Json::Value &  {\i root}, const std::string &  {\i filename}) const{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve the wrong keys from a Json::Value object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method goes through each key of the Json::Value object and makes sure it's valid.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i root} \cell }{The Json::Value object to be validated. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{The filename from which 'root' is from.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A vector with tuples, containing the line and name of invalid types. \par
}}}{
Definition at line {\b 55} of file {\b KeyValidator.cpp}.}\par
{
\ql
References {\b getUnknownKeyLine()}, and {\b validKeys}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d86/classparsing_1_1KeyValidator_a09db69c8ae81267a330d6430dcc29378_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d86/classparsing_1_1KeyValidator_a09db69c8ae81267a330d6430dcc29378_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v validateEntries\:parsing::KeyValidator}
{\xe \v parsing::KeyValidator\:validateEntries}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< std::tuple< int, std::string > > parsing::KeyValidator::validateEntries (const std::string &  {\i filename}, const std::unordered_set< std::string > &  {\i entryKeys}) const{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Validates that keys within the entries array are valid. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This mehthod goes through each of the entries, and validates, that the keys are part of the validEntryKeys attribute.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{The filename from which the entries are from \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i entryKeys} \cell }{The keys of the entries\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A vector with tuples, containing the line and name of invalid entrie keys \par
}}}{
Definition at line {\b 78} of file {\b KeyValidator.cpp}.}\par
{
\ql
References {\b getUnknownKeyLine()}, and {\b validEntryKeys}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d86/classparsing_1_1KeyValidator_aa1780ff0247f5d0112e11ed199cabd4d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d86/classparsing_1_1KeyValidator_aa1780ff0247f5d0112e11ed199cabd4d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v validateKeys\:parsing::KeyValidator}
{\xe \v parsing::KeyValidator\:validateKeys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< std::tuple< int, std::string > > parsing::KeyValidator::validateKeys (const Json::Value &  {\i root}, const std::string &  {\i filename})}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Validate keys off a Json::Value object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method goes through the MemberNames of a Json::Value object and validates, that they are part of the validKey attribute. It calls the nessecary methods to validate the keys within the entries array.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i root} \cell }{The Json::Value object to be validated. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{The filename from which 'root' is from.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A vector with tuples, containing the line and name of invalid types. \par
}}}{
Definition at line {\b 27} of file {\b KeyValidator.cpp}.}\par
{
\ql
References {\b getWrongKeys()}, {\b validateEntries()}, and {\b validateTypes()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d86/classparsing_1_1KeyValidator_a8a3ffe788064f6b32be35870aeeb792c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v validateTypes\:parsing::KeyValidator}
{\xe \v parsing::KeyValidator\:validateTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void parsing::KeyValidator::validateTypes (const std::string &  {\i filename}, const Json::Value &  {\i entry}, const std::unordered_set< std::string > &  {\i entryKeys}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Validates types from the entries array. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method goes makes sure, that the type of the given entry is valid and that it contains it's necessary keys. It will throw an exception if the type is missing, if the type is invalid or if the type is missing a key.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Unnecessary keys within a type entry, don't cause an exception and are ignored.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{The filename from which 'entry' is from \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i entry} \cell }{The entry to be validated \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i entryKeys} \cell }{The keys of the entry\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b exceptions::MissingTypeException}} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b exceptions::InvalidTypeException}} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b exceptions::MissingKeyException}} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 100} of file {\b KeyValidator.cpp}.}\par
{
\ql
References {\b getUnknownKeyLine()}, and {\b typeToKeys}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d86/classparsing_1_1KeyValidator_aa7432c84eeeff231350e606612f3483e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d86/classparsing_1_1KeyValidator_aa7432c84eeeff231350e606612f3483e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v typeToKeys\:parsing::KeyValidator}
{\xe \v parsing::KeyValidator\:typeToKeys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::unordered_map<std::string_view, std::vector<std::string> > parsing::KeyValidator::typeToKeys{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
        \{{\cf22 "EXE"}, \{{\cf22 "command"}\}\}, \{{\cf22 "PATH"}, \{{\cf22 "path"}\}\}, \{{\cf22 "ENV"}, \{{\cf22 "key"}, {\cf22 "value"}\}\}\par
    \}\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Changed from if/else clause within function to map in 0.2.1 \par
}}}{
Definition at line {\b 145} of file {\b KeyValidator.hpp}.}\par
}
{\xe \v validEntryKeys\:parsing::KeyValidator}
{\xe \v parsing::KeyValidator\:validEntryKeys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::unordered_set<std::string> parsing::KeyValidator::validEntryKeys{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{{\cf22 "type"}, {\cf22 "key"}, {\cf22 "value"},\par
        {\cf22 "path"}, {\cf22 "command"}\par
    \}\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Changed from vector to unordered_set in 0.2.1 - as this shoud improve lookup performance from O(n) to O(1) \par
}}}{
Definition at line {\b 138} of file {\b KeyValidator.hpp}.}\par
}
{\xe \v validKeys\:parsing::KeyValidator}
{\xe \v parsing::KeyValidator\:validKeys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::unordered_set<std::string> parsing::KeyValidator::validKeys{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{{\cf22 "outputfile"}, {\cf22 "hideshell"},\par
        {\cf22 "entries"}, {\cf22 "application"}\par
    \}\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Changed from vector to unordered_set in 0.2.1 - as this shoud improve lookup performance from O(n) to O(1) \par
}}}{
Definition at line {\b 131} of file {\b KeyValidator.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b KeyValidator.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/sources/{\b KeyValidator.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
exceptions::MissingKeyException Class Reference\par \pard\plain 
{\tc\tcl2 \v exceptions::MissingKeyException}
{\xe \v exceptions::MissingKeyException}
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for missing keys within entries. }}\par
{
{\f2 #include <Exceptions.hpp>}}\par
Inheritance diagram for exceptions::MissingKeyException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d25/classexceptions_1_1MissingKeyException__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for exceptions::MissingKeyException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d92/classexceptions_1_1MissingKeyException__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MissingKeyException} (const std::string &{\b key}, const std::string &{\b type})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b exceptions::CustomException}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b message}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b key}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for missing keys within entries. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This exception is thrown when a key (such as "path" or "command") is missing from an entry. It also prints the type and which key it is missing. \par
}{
Definition at line {\b 191} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MissingKeyException\:exceptions::MissingKeyException}
{\xe \v exceptions::MissingKeyException\:MissingKeyException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
exceptions::MissingKeyException::MissingKeyException (const std::string &  {\i key}, const std::string &  {\i type}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
I planned to use std::format, however it seems that the required Compiler Version is not yet available in the stable Ubuntu Repo!\par
}}}{
Definition at line {\b 198} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b key}, {\b message}, and {\b type}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v what\:exceptions::MissingKeyException}
{\xe \v exceptions::MissingKeyException\:what}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * exceptions::MissingKeyException::what () const{\f2 [inline]}, {\f2 [override]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 210} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v key\:exceptions::MissingKeyException}
{\xe \v exceptions::MissingKeyException\:key}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string exceptions::MissingKeyException::key{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 195} of file {\b Exceptions.hpp}.}\par
}
{\xe \v message\:exceptions::MissingKeyException}
{\xe \v exceptions::MissingKeyException\:message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string exceptions::MissingKeyException::message{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 193} of file {\b Exceptions.hpp}.}\par
}
{\xe \v type\:exceptions::MissingKeyException}
{\xe \v exceptions::MissingKeyException\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string exceptions::MissingKeyException::type{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 194} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b Exceptions.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
exceptions::MissingTypeException Class Reference\par \pard\plain 
{\tc\tcl2 \v exceptions::MissingTypeException}
{\xe \v exceptions::MissingTypeException}
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for missing types of entries. }}\par
{
{\f2 #include <Exceptions.hpp>}}\par
Inheritance diagram for exceptions::MissingTypeException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/dd6/classexceptions_1_1MissingTypeException__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for exceptions::MissingTypeException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d0a/classexceptions_1_1MissingTypeException__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MissingTypeException} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b exceptions::CustomException}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b message} = "Missing \\"type\\" key for at least one entry!"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for missing types of entries. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This exception is thrown, when an entry is missing it's "type" key. \par
}{
Definition at line {\b 221} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MissingTypeException\:exceptions::MissingTypeException}
{\xe \v exceptions::MissingTypeException\:MissingTypeException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
exceptions::MissingTypeException::MissingTypeException (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 226} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v what\:exceptions::MissingTypeException}
{\xe \v exceptions::MissingTypeException\:what}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * exceptions::MissingTypeException::what () const{\f2 [inline]}, {\f2 [override]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 229} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v message\:exceptions::MissingTypeException}
{\xe \v exceptions::MissingTypeException\:message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string exceptions::MissingTypeException::message = "Missing \\"type\\" key for at least one entry!"{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 223} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b Exceptions.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
exceptions::NoSuchDirException Class Reference\par \pard\plain 
{\tc\tcl2 \v exceptions::NoSuchDirException}
{\xe \v exceptions::NoSuchDirException}
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for when a directory does not exist. }}\par
{
{\f2 #include <Exceptions.hpp>}}\par
Inheritance diagram for exceptions::NoSuchDirException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/dcc/classexceptions_1_1NoSuchDirException__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for exceptions::NoSuchDirException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/ddf/classexceptions_1_1NoSuchDirException__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NoSuchDirException} (const std::string &dir)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b exceptions::CustomException}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b message}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for when a directory does not exist. \par
}{
Definition at line {\b 277} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v NoSuchDirException\:exceptions::NoSuchDirException}
{\xe \v exceptions::NoSuchDirException\:NoSuchDirException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
exceptions::NoSuchDirException::NoSuchDirException (const std::string &  {\i dir}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 282} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v what\:exceptions::NoSuchDirException}
{\xe \v exceptions::NoSuchDirException\:what}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * exceptions::NoSuchDirException::what () const{\f2 [inline]}, {\f2 [override]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 286} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v message\:exceptions::NoSuchDirException}
{\xe \v exceptions::NoSuchDirException\:message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string exceptions::NoSuchDirException::message{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 279} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b Exceptions.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
options Struct Reference\par \pard\plain 
{\tc\tcl2 \v options}
{\xe \v options}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The struct containing all possible options. }}\par
{
{\f2 #include <CommandLineHandler.hpp>}}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The struct containing all possible options. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This struct contains all long and short options which can be used and will be parsed using "getopt.h"{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqNonFunc4\}\par}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
CommandLineHandler \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b CommandLineHandler.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
exceptions::ParsingException Class Reference\par \pard\plain 
{\tc\tcl2 \v exceptions::ParsingException}
{\xe \v exceptions::ParsingException}
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for syntax errors within the json file. }}\par
{
{\f2 #include <Exceptions.hpp>}}\par
Inheritance diagram for exceptions::ParsingException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d0b/classexceptions_1_1ParsingException__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for exceptions::ParsingException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d90/classexceptions_1_1ParsingException__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ParsingException} (const std::string &{\b file})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b exceptions::CustomException}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b file}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b message}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for syntax errors within the json file. \par
}{
Definition at line {\b 46} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ParsingException\:exceptions::ParsingException}
{\xe \v exceptions::ParsingException\:ParsingException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
exceptions::ParsingException::ParsingException (const std::string &  {\i file}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
I planned to use std::format, however it seems that the required Compiler Version is not yet available in the stable Ubuntu Repo!\par
}}}{
Definition at line {\b 52} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b file}, and {\b message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v what\:exceptions::ParsingException}
{\xe \v exceptions::ParsingException\:what}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * exceptions::ParsingException::what () const{\f2 [inline]}, {\f2 [override]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 65} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v file\:exceptions::ParsingException}
{\xe \v exceptions::ParsingException\:file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string exceptions::ParsingException::file{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 48} of file {\b Exceptions.hpp}.}\par
}
{\xe \v message\:exceptions::ParsingException}
{\xe \v exceptions::ParsingException\:message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string exceptions::ParsingException::message{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 49} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b Exceptions.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
exceptions::UnreachableCodeException Class Reference\par \pard\plain 
{\tc\tcl2 \v exceptions::UnreachableCodeException}
{\xe \v exceptions::UnreachableCodeException}
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for when the application reaches code it shouldn't reach. }}\par
{
{\f2 #include <Exceptions.hpp>}}\par
Inheritance diagram for exceptions::UnreachableCodeException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/da9/classexceptions_1_1UnreachableCodeException__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for exceptions::UnreachableCodeException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/df6/classexceptions_1_1UnreachableCodeException__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UnreachableCodeException} (const std::string &{\b message})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b exceptions::CustomException}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what} () const noexcept override\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b message}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for when the application reaches code it shouldn't reach. \par
}{
Definition at line {\b 238} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v UnreachableCodeException\:exceptions::UnreachableCodeException}
{\xe \v exceptions::UnreachableCodeException\:UnreachableCodeException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
exceptions::UnreachableCodeException::UnreachableCodeException (const std::string &  {\i message}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 243} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b config::EXECUTABLE_NAME}, and {\b message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v what\:exceptions::UnreachableCodeException}
{\xe \v exceptions::UnreachableCodeException\:what}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * exceptions::UnreachableCodeException::what () const{\f2 [inline]}, {\f2 [override]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 250} of file {\b Exceptions.hpp}.}\par
{
\ql
References {\b message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v message\:exceptions::UnreachableCodeException}
{\xe \v exceptions::UnreachableCodeException\:message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string exceptions::UnreachableCodeException::message{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 240} of file {\b Exceptions.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b Exceptions.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
utilities::Utils Class Reference\par \pard\plain 
{\tc\tcl2 \v utilities::Utils}
{\xe \v utilities::Utils}
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Responsible for utility function. }}\par
{
{\f2 #include <Utils.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b setupEasyLogging} (const std::string &configFile)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set up easylogging. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b handleParseException} (const {\b exceptions::CustomException} &e, const std::vector< std::string >::iterator &file, const std::vector< std::string > &files)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle an exception within the main parsing loop. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b askToContinue} (const std::string &prompt="Do you want to continue? (Y/N)\\n")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Asks if the user wants to continue. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b checkConfigFile} (const std::string &configFile)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the easylogging-config file exists. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const std::string & {\b checkDirectory} (std::string &directory)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the given directory exists and is valid. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b escapeString} (const std::string &str)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape any unwanted escape sequences in a string. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Responsible for utility function. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is responsible for handling miscellaneous utility functions which be used throughout the whole project. \par
}{
Definition at line {\b 42} of file {\b Utils.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v askToContinue\:utilities::Utils}
{\xe \v utilities::Utils\:askToContinue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool utilities::Utils::askToContinue (const std::string &  {\i prompt} = {\f2 "Do\~ you\~ want\~ to\~ continue?\~ (Y/N)\\n"}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Asks if the user wants to continue. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Asks the user if they want to continue and prompts them for a response. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i prompt} \cell }{(Optional) A custom prompt to be used. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Returns true if the user wants to continue and false otherwise. \par
}}}{
Definition at line {\b 34} of file {\b Utils.cpp}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d9e/classutilities_1_1Utils_a982a6227fd42d6437eaea4b6887df4ff_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v checkConfigFile\:utilities::Utils}
{\xe \v utilities::Utils\:checkConfigFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void utilities::Utils::checkConfigFile (const std::string &  {\i configFile}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the easylogging-config file exists. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i configFile} \cell }{The config file to be checked \cell }
{\row }
}
}{
Definition at line {\b 55} of file {\b Utils.cpp}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d9e/classutilities_1_1Utils_abf18cb6fd599bec6e8c55b62ee178640_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v checkDirectory\:utilities::Utils}
{\xe \v utilities::Utils\:checkDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string & utilities::Utils::checkDirectory (std::string &  {\i directory}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the given directory exists and is valid. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function checks if the given directory exists and is valid. If the directory does not end with a '/' or a '\\', it will be added.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i directory} \cell }{The directory to be checked\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The checked directory \par
}}}{
Definition at line {\b 65} of file {\b Utils.cpp}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d9e/classutilities_1_1Utils_ac07ca745d24efb547beec94f1d6acc11_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v escapeString\:utilities::Utils}
{\xe \v utilities::Utils\:escapeString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string utilities::Utils::escapeString (const std::string &  {\i str}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape any unwanted escape sequences in a string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function takes a string and escapes already existing escape sequences. E.g. "\\n" would become "\\\\n".\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i str} \cell }{The string to be escaped\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The processed string \par
}}}{
Definition at line {\b 97} of file {\b Utils.cpp}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d9e/classutilities_1_1Utils_adde69042b1a850d5e71499134289760f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v handleParseException\:utilities::Utils}
{\xe \v utilities::Utils\:handleParseException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool utilities::Utils::handleParseException (const {\b exceptions::CustomException} &  {\i e}, const std::vector< std::string >::iterator &  {\i file}, const std::vector< std::string > &  {\i files}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle an exception within the main parsing loop. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles an exception within the main parsing loop. It displays the error message and asks the user if they want to continue.{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Moved to {\b Utils} in 0.2.2 to improve readibility in {\b main.cpp}\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i e} \cell }{The exception to be handled \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{The file which caused the exception \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i files} \cell }{The list of files\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Returns true if the user wants to continue and false otherwise \par
}}}{
Definition at line {\b 77} of file {\b Utils.cpp}.}\par
{
\ql
References {\b askToContinue()}, and {\b exceptions::CustomException::what()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d9e/classutilities_1_1Utils_ad0ae5e5ca3f40a7c2de1667856f5e0bd_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d9e/classutilities_1_1Utils_ad0ae5e5ca3f40a7c2de1667856f5e0bd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setupEasyLogging\:utilities::Utils}
{\xe \v utilities::Utils\:setupEasyLogging}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void utilities::Utils::setupEasyLogging (const std::string &  {\i configFile}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set up easylogging. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function sets up the easylogging library based on the given config file. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i configFile} \cell }{The config file which is used \cell }
{\row }
}
}{
Definition at line {\b 25} of file {\b Utils.cpp}.}\par
{
\ql
References {\b config::HOMEPAGE_URL}, {\b config::MAJOR_VERSION}, {\b config::MINOR_VERSION}, {\b config::PATCH_VERSION}, and {\b config::PROJECT_NAME}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d9e/classutilities_1_1Utils_aba875f8f5a9d060b28aabd965d3a5eb0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b Utils.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/sources/{\b Utils.cpp}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
README.md File Reference\par \pard\plain 
{\tc\tcl2 \v README.md}
{\xe \v README.md}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/BatchCreator.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/BatchCreator.hpp}
{\xe \v src/include/BatchCreator.hpp}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the {\b BatchCreator} class. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "FileData.hpp"}\par
{\f2 #include <memory>}\par
{\f2 #include <sstream>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for BatchCreator.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d34/BatchCreator_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d53/BatchCreator_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BatchCreator}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a batch file from a FileData obeject. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the {\b BatchCreator} class. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Maximilian Rodler \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2024-04-22 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0.2.1 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b BatchCreator}\par
{\b src/sources/BatchCreator.cpp}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
See LICENSE file \par
}}}{
Definition in file {\b BatchCreator.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BatchCreator.hpp\par \pard\plain 
{\tc\tcl2 \v src/include/BatchCreator.hpp}
{\xe \v src/include/BatchCreator.hpp}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00016 {\cf21 #include "FileData.hpp"}\par
00017 {\cf21 #include <memory>}\par
00018 {\cf21 #include <sstream>}\par
00019 \par
00029 {\cf17 class }BatchCreator \{\par
00030 {\cf17 public}:\par
00039     {\cf17 explicit} BatchCreator(std::shared_ptr<parsing::FileData> fileData);\par
00040 \par
00046     [[nodiscard]] std::shared_ptr<std::stringstream> getDataStream(){\cf17  const }\{\par
00047         {\cf19 return} dataStream;\par
00048     \}\par
00049 \par
00050 {\cf17 private}:\par
00051     std::shared_ptr<std::stringstream>\par
00052     dataStream; \par
00054     std::shared_ptr<parsing::FileData> fileData; \par
00063     {\cf18 void} createBatch() {\cf17 const};\par
00064 \par
00073     {\cf18 void} writeStart() {\cf17 const};\par
00074 \par
00082     {\cf18 void} writeHideShell() {\cf17 const};\par
00083 \par
00093     {\cf18 void} writeCommands() {\cf17 const};\par
00094 \par
00106     {\cf18 void} writeEnvVariables() {\cf17 const};\par
00107 \par
00116     {\cf18 void} writePathVariables() {\cf17 const};\par
00117 \par
00127     {\cf18 void} writeApplication() {\cf17 const};\par
00128 \par
00136     {\cf18 void} writeEnd() {\cf17 const};\par
00137 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/CommandLineHandler.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/CommandLineHandler.hpp}
{\xe \v src/include/CommandLineHandler.hpp}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Responsible for the Command Line Interface. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <getopt.h>}\par
{\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include <optional>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CommandLineHandler.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d32/CommandLineHandler_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dcd/CommandLineHandler_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b cli::CommandLineHandler}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Responsible for the Command Line Interface. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b cli}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Includes everything regarding the CLI. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const struct option {\b cli::options} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Responsible for the Command Line Interface. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Simon Blum \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2024-04-26 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0.2.2\par
}}This file is responsible for the Command Line Interface. As such it includes things such as the CommandLineHandler class, possible options and style helpers.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b cli} \par
CommandLineHandler \par
{\b options} \par
{\b StyleHelpers}\par
{\b src/sources/CommandLineHandler.cpp}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
See LICENSE file \par
}}}{
Definition in file {\b CommandLineHandler.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CommandLineHandler.hpp\par \pard\plain 
{\tc\tcl2 \v src/include/CommandLineHandler.hpp}
{\xe \v src/include/CommandLineHandler.hpp}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00021 {\cf21 #ifndef COMMANDLINEHANDLER_HPP}\par
00022 {\cf21 #define COMMANDLINEHANDLER_HPP}\par
00023 \par
00024 \par
00025 {\cf21 #include <getopt.h>}\par
00026 {\cf21 #include <string>}\par
00027 {\cf21 #include <vector>}\par
00028 {\cf21 #include <optional>}\par
00029 \par
00042 {\cf17 namespace }cli \{\par
00043 \par
00056 {\cf17 class }CommandLineHandler \{\par
00057 {\cf17 public}:\par
00066     [[noreturn]] {\cf17 static} {\cf18 void} printHelp();\par
00072     [[noreturn]] {\cf17 static} {\cf18 void} printVersion();\par
00080     [[noreturn]] {\cf17 static} {\cf18 void} printCredits();\par
00095     {\cf17 static} std::tuple<std::optional<std::string>, std::vector<std::string>>\par
00096     parseArguments({\cf18 int} argc, {\cf18 char}* argv[]);\par
00102     CommandLineHandler() = {\cf17 delete};\par
00108     ~CommandLineHandler() = {\cf17 delete};\par
00109 \};\par
00110 \par
00121 {\cf17 static} {\cf17 const} {\cf17 struct }option options[] = \{\par
00122     \{{\cf22 "help"}, no_argument, {\cf17 nullptr}, {\cf23 'h'}\}, \par
00123     \{{\cf22 "version"}, no_argument, {\cf17 nullptr}, {\cf23 'v'}\}, \par
00124     \{{\cf22 "credits"}, no_argument, {\cf17 nullptr}, {\cf23 'c'}\}, \par
00125     \{{\cf22 "verbose"}, no_argument, {\cf17 nullptr}, 0\}, \par
00126     \{{\cf22 "outdir"}, required_argument, {\cf17 nullptr}, {\cf23 'o'}\}, \par
00127     {\cf17 nullptr}\par
00128 \};\par
00129 \par
00141 {\cf21 #ifdef IS_UNIX }{\cf20 // CLI Formatting for Linux}\par
00142 {\cf17 static} {\cf17 const} std::string CLEAR_TERMINAL = {\cf22 "\\033[2J\\033[1;1H"};\par
00143 {\cf17 static} {\cf17 const} std::string RESET = {\cf22 "\\033[0m"};\par
00144 {\cf17 static} {\cf17 const} std::string RED = {\cf22 "\\033[0;31m"};\par
00145 {\cf17 static} {\cf17 const} std::string GREEN = {\cf22 "\\033[0;32m"};\par
00146 {\cf17 static} {\cf17 const} std::string YELLOW = {\cf22 "\\033[0;33m"};\par
00147 {\cf17 static} {\cf17 const} std::string BLUE = {\cf22 "\\033[0;34m"};\par
00148 {\cf17 static} {\cf17 const} std::string MAGENTA = {\cf22 "\\033[0;35m"};\par
00149 {\cf17 static} {\cf17 const} std::string CYAN = {\cf22 "\\033[0;36m"};\par
00150 {\cf17 static} {\cf17 const} std::string WHITE = {\cf22 "\\033[0;37m"};\par
00151 {\cf17 static} {\cf17 const} std::string BOLD = {\cf22 "\\033[1m"};\par
00152 {\cf17 static} {\cf17 const} std::string UNDERLINE = {\cf22 "\\033[4m"};\par
00153 {\cf17 static} {\cf17 const} std::string ITALIC = {\cf22 "\\033[3m"};\par
00154 {\cf20 //@note Windows doesn't support ANSI escape codes the same way}\par
00155 {\cf21 #elif defined(IS_WINDOWS)}\par
00156 {\cf17 static} {\cf17 const} std::string CLEAR_TERMINAL = {\cf22 ""};\par
00157 {\cf17 static} {\cf17 const} std::string RESET = {\cf22 ""};\par
00158 {\cf17 static} {\cf17 const} std::string RED = {\cf22 ""};\par
00159 {\cf17 static} {\cf17 const} std::string GREEN = {\cf22 ""};\par
00160 {\cf17 static} {\cf17 const} std::string YELLOW = {\cf22 ""};\par
00161 {\cf17 static} {\cf17 const} std::string BLUE = {\cf22 ""};\par
00162 {\cf17 static} {\cf17 const} std::string MAGENTA = {\cf22 ""};\par
00163 {\cf17 static} {\cf17 const} std::string CYAN = {\cf22 ""};\par
00164 {\cf17 static} {\cf17 const} std::string WHITE = {\cf22 ""};\par
00165 {\cf17 static} {\cf17 const} std::string BOLD = {\cf22 ""};\par
00166 {\cf17 static} {\cf17 const} std::string UNDERLINE = {\cf22 ""};\par
00167 {\cf17 static} {\cf17 const} std::string ITALIC = {\cf22 ""};\par
00168 {\cf21 #endif}\par
 {\cf20 // end of group StyleHelpers}00170 \par
00171 \} {\cf20 // namespace cli}\par
00172 \par
00173 {\cf21 #endif }{\cf20 // COMMANDLINEHANDLER_HPP}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/config.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/config.hpp}
{\xe \v src/include/config.hpp}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configures general project information. }}\par
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d28/config_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b config}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Namespace used for general project information. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
constexpr auto {\b config::LOG_CONFIG} = "C:/Users/Clean/Documents/Uni/JSON2Bat/build/debug-ninja/config/easylogging.conf"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
constexpr auto {\b config::EXECUTABLE_NAME} = "json2batch"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
constexpr auto {\b config::MAJOR_VERSION} = "0"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
constexpr auto {\b config::MINOR_VERSION} = "2"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
constexpr auto {\b config::PATCH_VERSION} = "5"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
constexpr auto {\b config::DESCRIPTION} = "A simple tool to convert json to batch."\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
constexpr auto {\b config::PROJECT_NAME} = "JSON2Batch"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
constexpr auto {\b config::AUTHORS} = "@AUTHORS"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
constexpr auto {\b config::HOMEPAGE_URL} = "https://dhbwprojectsit23.github.io/JSON2Bat"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configures general project information. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Simon Blum \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2024-04-18 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0.1.5\par
}}This file is used by CMake to configure general information which can be used throughout the project.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This file is automatically configured by CMake. The original file can be found in conf/config.hpp.in @license GNU GPLv3 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
See LICENSE file \par
}}}{
Definition in file {\b config.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
config.hpp\par \pard\plain 
{\tc\tcl2 \v src/include/config.hpp}
{\xe \v src/include/config.hpp}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00016 {\cf20 // This file is autogenerated. Changes will be overwritten}\par
00017 \par
00018 {\cf21 #ifndef CONFIG_HPP}\par
00019 {\cf21 #define CONFIG_HPP}\par
00020 \par
00025 {\cf17 namespace }config \{\par
00026 {\cf17 inline} {\cf17 constexpr} {\cf17 auto} LOG_CONFIG = {\cf22 "C:/Users/Clean/Documents/Uni/JSON2Bat/build/debug-ninja/config/easylogging.conf"};\par
00027 {\cf17 inline} {\cf17 constexpr} {\cf17 auto} EXECUTABLE_NAME = {\cf22 "json2batch"};\par
00028 {\cf17 inline} {\cf17 constexpr} {\cf17 auto} MAJOR_VERSION = {\cf22 "0"};\par
00029 {\cf17 inline} {\cf17 constexpr} {\cf17 auto} MINOR_VERSION = {\cf22 "2"};\par
00030 {\cf17 inline} {\cf17 constexpr} {\cf17 auto} PATCH_VERSION = {\cf22 "5"};\par
00031 {\cf17 inline} {\cf17 constexpr} {\cf17 auto} DESCRIPTION = {\cf22 "A simple tool to convert json to batch."};\par
00032 {\cf17 inline} {\cf17 constexpr} {\cf17 auto} PROJECT_NAME = {\cf22 "JSON2Batch"};\par
00033 {\cf17 inline} {\cf17 constexpr} {\cf17 auto} AUTHORS = {\cf22 "@AUTHORS"};\par
00034 {\cf17 inline} {\cf17 constexpr} {\cf17 auto} HOMEPAGE_URL = {\cf22 "https://dhbwprojectsit23.github.io/JSON2Bat"};\par
00035 \} {\cf20 // namespace config}\par
00036 \par
00037 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/Exceptions.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/Exceptions.hpp}
{\xe \v src/include/Exceptions.hpp}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains all the custom exceptions used in the project. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "LoggingWrapper.hpp"}\par
{\f2 #include "config.hpp"}\par
{\f2 #include <string>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Exceptions.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dce/Exceptions_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d29/Exceptions_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b exceptions::CustomException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for all custom exceptions. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b exceptions::ParsingException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for syntax errors within the json file. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b exceptions::FileExistsException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for an already exisiting outputfile. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b exceptions::InvalidValueException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for an ivalid (usually empty) value field. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b exceptions::InvalidKeyException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for invalid keys. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b exceptions::InvalidTypeException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for invalid types. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b exceptions::MissingKeyException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for missing keys within entries. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b exceptions::MissingTypeException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for missing types of entries. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b exceptions::UnreachableCodeException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for when the application reaches code it shouldn't reach. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b exceptions::FailedToOpenFileException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for when a file can't be opened. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b exceptions::NoSuchDirException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for when a directory does not exist. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b exceptions::ContainsBadCharacterException}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception for when a string contains bad characters. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b exceptions}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Namespace used for customized exceptions. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains all the custom exceptions used in the project. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Simon Blum \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2024-04-26 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0.2.2\par
}}The error handling within this project is exception based. This allows us to throw custom exceptions throughout any part of the process and allow us to deal with them when necessary.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
See LICENSE file \par
}}}{
Definition in file {\b Exceptions.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Exceptions.hpp\par \pard\plain 
{\tc\tcl2 \v src/include/Exceptions.hpp}
{\xe \v src/include/Exceptions.hpp}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00014 {\cf21 #ifndef EXCEPTIONS_HPP}\par
00015 {\cf21 #define EXCEPTIONS_HPP}\par
00016 \par
00017 {\cf21 #include "LoggingWrapper.hpp"}\par
00018 {\cf21 #include "config.hpp"}\par
00019 {\cf21 #include <string>}\par
00020 \par
00025 {\cf17 namespace }exceptions \{\par
00035 {\cf17 class }CustomException : {\cf17 public} std::exception \{\par
00036 {\cf17 public}:\par
00037     [[nodiscard]] {\cf17 const} {\cf18 char} *what() const noexcept{\cf17  override }\{\par
00038         {\cf19 return} {\cf22 "Base Exception"};\par
00039     \}\par
00040 \};\par
00041 \par
00046 {\cf17 class }ParsingException : {\cf17 public} CustomException \{\par
00047 {\cf17 private}:\par
00048     {\cf17 const} std::string file;\par
00049     std::string message;\par
00050 \par
00051 {\cf17 public}:\par
00052     {\cf17 explicit} ParsingException({\cf17 const} std::string &file) : file(file) \{\par
00058         std::stringstream ss;\par
00059         ss << {\cf22 "Error while trying to parse \\""} << file << {\cf22 "\\"!\\n"}\par
00060            << {\cf22 "There most likely is a syntax error within the \\".json\\" file."};\par
00061         this->message = ss.str();\par
00062         LOG_INFO << {\cf22 "ParsingException: "} << message;\par
00063     \}\par
00064 \par
00065     [[nodiscard]] {\cf17 const} {\cf18 char} *what() const noexcept{\cf17  override }\{\par
00066         {\cf19 return} message.c_str();\par
00067     \}\par
00068 \};\par
00069 \par
00074 {\cf17 class }FileExistsException : {\cf17 public} CustomException \{\par
00075 {\cf17 private}:\par
00076     {\cf17 const} std::string file;\par
00077     std::string message;\par
00078 \par
00079 {\cf17 public}:\par
00080     {\cf17 explicit} FileExistsException({\cf17 const} std::string &file) : file(file) \{\par
00086         std::stringstream ss;\par
00087         ss << {\cf22 "The outputfile \\""} << file << {\cf22 "\\" already exists!"};\par
00088         this->message = ss.str();\par
00089         LOG_INFO << {\cf22 "BatchExistsException: "} << message;\par
00090     \}\par
00091 \par
00092     [[nodiscard]] {\cf17 const} {\cf18 char} *what() const noexcept{\cf17  override }\{\par
00093         {\cf19 return} message.c_str();\par
00094     \}\par
00095 \};\par
00096 \par
00101 {\cf17 class }InvalidValueException : {\cf17 public} CustomException \{\par
00102 {\cf17 private}:\par
00103     {\cf17 const} std::string key;\par
00104     std::string message;\par
00105 \par
00106 {\cf17 public}:\par
00107     InvalidValueException({\cf17 const} std::string &key, {\cf17 const} std::string &issue)\par
00108         : key(key) \{\par
00114         std::stringstream ss;\par
00115         ss << {\cf22 "Error at key \\""} << key << {\cf22 "\\"! "} << issue;\par
00116         this->message = ss.str();\par
00117         LOG_INFO << {\cf22 "InvalidValueException: "} << message;\par
00118     \}\par
00119     [[nodiscard]] {\cf17 const} {\cf18 char} *what() const noexcept{\cf17  override }\{\par
00120         {\cf19 return} message.c_str();\par
00121     \}\par
00122 \};\par
00123 \par
00135 {\cf17 class }InvalidKeyException : {\cf17 public} CustomException \{\par
00136 {\cf17 private}:\par
00137     std::string message = {\cf22 "Invalid key found!"};\par
00138 \par
00139 {\cf17 public}:\par
00140     {\cf17 explicit} InvalidKeyException(\par
00141         {\cf17 const} std::vector<std::tuple<int, std::string>> &keys) \{\par
00142         LOG_INFO << {\cf22 "InvalidKeyException: "} << message;\par
00143 \par
00144         {\cf19 for} ({\cf17 const} {\cf17 auto} &[line, key] : keys) \{\par
00145             LOG_WARNING << {\cf22 "Invalid key found at line "} << line << {\cf22 ": \\""} << key\par
00146                         << {\cf22 "\\"!"};\par
00147         \}\par
00148     \}\par
00149     [[nodiscard]] {\cf17 const} {\cf18 char} *what() const noexcept{\cf17  override }\{\par
00150         {\cf19 return} message.c_str();\par
00151     \}\par
00152 \};\par
00153 \par
00162 {\cf17 class }InvalidTypeException : {\cf17 public} CustomException \{\par
00163 {\cf17 private}:\par
00164     {\cf17 const} std::string type;\par
00165     std::string message;\par
00166 \par
00167 {\cf17 public}:\par
00168     InvalidTypeException({\cf17 const} std::string &type, {\cf18 int} line) : type(type) \{\par
00174         std::stringstream ss;\par
00175         ss << {\cf22 "Invalid type found at line "} << line << {\cf22 ": \\""} << type << {\cf22 "\\""};\par
00176         this->message = ss.str();\par
00177         LOG_INFO << {\cf22 "InvalidTypeException: "} << message;\par
00178     \}\par
00179     [[nodiscard]] {\cf17 const} {\cf18 char} *what() const noexcept{\cf17  override }\{\par
00180         {\cf19 return} message.c_str();\par
00181     \}\par
00182 \};\par
00183 \par
00191 {\cf17 class }MissingKeyException : {\cf17 public} CustomException \{\par
00192 {\cf17 private}:\par
00193     std::string message;\par
00194     std::string type;\par
00195     std::string key;\par
00196 \par
00197 {\cf17 public}:\par
00198     MissingKeyException({\cf17 const} std::string &key, {\cf17 const} std::string &type)\par
00199         : type(type), key(key) \{\par
00205         std::stringstream ss;\par
00206         ss << {\cf22 "Missing key \\""} << key << {\cf22 "\\" for type \\""} << type << {\cf22 "\\"!"};\par
00207         this->message = ss.str();\par
00208         LOG_INFO << {\cf22 "MissingKeyException: "} << message;\par
00209     \}\par
00210     [[nodiscard]] {\cf17 const} {\cf18 char} *what() const noexcept{\cf17  override }\{\par
00211         {\cf19 return} message.c_str();\par
00212     \}\par
00213 \};\par
00214 \par
00221 {\cf17 class }MissingTypeException : {\cf17 public} CustomException \{\par
00222 {\cf17 private}:\par
00223     std::string message = {\cf22 "Missing \\"type\\" key for at least one entry!"};\par
00224 \par
00225 {\cf17 public}:\par
00226     MissingTypeException() \{\par
00227         LOG_INFO << {\cf22 "MissingTypeException: "} << message;\par
00228     \}\par
00229     [[nodiscard]] {\cf17 const} {\cf18 char} *what() const noexcept{\cf17  override }\{\par
00230         {\cf19 return} message.c_str();\par
00231     \}\par
00232 \};\par
00233 \par
00238 {\cf17 class }UnreachableCodeException : {\cf17 public} CustomException \{\par
00239 {\cf17 private}:\par
00240     std::string message;\par
00241 \par
00242 {\cf17 public}:\par
00243     {\cf17 explicit} UnreachableCodeException({\cf17 const} std::string &message)\par
00244         : message(message) \{\par
00245         OUTPUT << {\cf22 "This exception happened due to a bug in the application!\\n"}\par
00246                << {\cf22 "Please report this bug! See "} << config::EXECUTABLE_NAME\par
00247                << {\cf22 " -c for contact information.\\n"};\par
00248         LOG_INFO << {\cf22 "UnreachableCodeException: "} << message;\par
00249     \}\par
00250     [[nodiscard]] {\cf17 const} {\cf18 char} *what() const noexcept{\cf17  override }\{\par
00251         {\cf19 return} message.c_str();\par
00252     \}\par
00253 \};\par
00254 \par
00259 {\cf17 class }FailedToOpenFileException : {\cf17 public} CustomException \{\par
00260 {\cf17 private}:\par
00261     std::string message;\par
00262 \par
00263 {\cf17 public}:\par
00264     {\cf17 explicit} FailedToOpenFileException({\cf17 const} std::string &file) \{\par
00265         message = {\cf22 "Failed to open file: "} + file;\par
00266         LOG_INFO << {\cf22 "FailedToOpenFileException: "} << message;\par
00267     \}\par
00268     [[nodiscard]] {\cf17 const} {\cf18 char} *what() const noexcept{\cf17  override }\{\par
00269         {\cf19 return} message.c_str();\par
00270     \}\par
00271 \};\par
00272 \par
00277 {\cf17 class }NoSuchDirException : {\cf17 public} CustomException \{\par
00278 {\cf17 private}:\par
00279     std::string message;\par
00280 \par
00281 {\cf17 public}:\par
00282     {\cf17 explicit} NoSuchDirException({\cf17 const} std::string &dir) \{\par
00283         message = {\cf22 "No such directory: "} + dir;\par
00284         LOG_INFO << {\cf22 "NoSuchDirException: "} << message;\par
00285     \}\par
00286     [[nodiscard]] {\cf17 const} {\cf18 char} *what() const noexcept{\cf17  override }\{\par
00287         {\cf19 return} message.c_str();\par
00288     \}\par
00289 \};\par
00290 \par
00295 {\cf17 class }ContainsBadCharacterException : {\cf17 public} CustomException \{\par
00296 {\cf17 private}:\par
00297     std::string message;\par
00298 \par
00299 {\cf17 public}:\par
00300     {\cf17 explicit} ContainsBadCharacterException({\cf17 const} std::string &value) \{\par
00301         message = {\cf22 "The value \\""} + value + {\cf22 "\\" contains bad characters!"};\par
00302         LOG_INFO << {\cf22 "ContainsBadCharacterException: "} << message;\par
00303     \}\par
00304     [[nodiscard]] {\cf17 const} {\cf18 char} *what() const noexcept{\cf17  override }\{\par
00305         {\cf19 return} message.c_str();\par
00306     \}\par
00307 \};\par
00308 \par
00309 \} {\cf20 // namespace exceptions}\par
00310 \par
00311 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/FileData.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/FileData.hpp}
{\xe \v src/include/FileData.hpp}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the FileData class. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <optional>}\par
{\f2 #include <string>}\par
{\f2 #include <vector>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for FileData.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/dca/FileData_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/da3/FileData_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b parsing::FileData}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class contains all data from the json file. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b parsing}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The namespace containing everything relevant to parsing. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the FileData class. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sonia Sinacci, Elena Schwartzbach \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
16.04.2024 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0.1.5 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b parsing::FileData}\par
{\b src/sources/FileData.cpp}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
See LICENSE file \par
}}}{
Definition in file {\b FileData.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FileData.hpp\par \pard\plain 
{\tc\tcl2 \v src/include/FileData.hpp}
{\xe \v src/include/FileData.hpp}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00015 {\cf21 #ifndef FILEDATA_HPP}\par
00016 {\cf21 #define FILEDATA_HPP}\par
00017 \par
00018 {\cf21 #include <optional>}\par
00019 {\cf21 #include <string>}\par
00020 {\cf21 #include <vector>}\par
00021 \par
00022 {\cf17 namespace }parsing \{\par
00032 {\cf17 class }FileData \{\par
00033 {\cf17 public}:\par
00044     {\cf18 void} setOutputFile(std::string &newOutputfile);\par
00045 \par
00050     {\cf18 void} setHideShell({\cf18 bool} newHideShell) \{\par
00051         this->hideShell = newHideShell;\par
00052     \}\par
00053 \par
00062     {\cf18 void} setApplication({\cf17 const} std::string &newApplication);\par
00063 \par
00074     {\cf18 void} addCommand({\cf17 const} std::string &command);\par
00075 \par
00087     {\cf18 void} addEnvironmentVariable({\cf17 const} std::string &name,\par
00088                                 {\cf17 const} std::string &value);\par
00089 \par
00100     {\cf18 void} addPathValue({\cf17 const} std::string &pathValue);\par
00101 \par
00106     [[nodiscard]] {\cf17 const} std::string &getOutputFile(){\cf17  const }\{\par
00107         {\cf19 return} outputfile;\par
00108     \}\par
00109 \par
00114     [[nodiscard]] {\cf18 bool} getHideShell(){\cf17  const }\{\par
00115         {\cf19 return} hideShell;\par
00116     \}\par
00117 \par
00122     [[nodiscard]] {\cf17 const} std::optional<std::string> &getApplication(){\cf17  const }\{\par
00123         {\cf19 return} application;\par
00124     \}\par
00125 \par
00130     [[nodiscard]] {\cf17 const} std::vector<std::string> &getCommands(){\cf17  const }\{\par
00131         {\cf19 return} commands;\par
00132     \}\par
00133 \par
00138     [[nodiscard]] {\cf17 const} std::vector<std::tuple<std::string, std::string>> &\par
00139     getEnvironmentVariables(){\cf17  const }\{\par
00140         {\cf19 return} environmentVariables;\par
00141     \}\par
00142 \par
00147     [[nodiscard]] {\cf17 const} std::vector<std::string> &getPathValues(){\cf17  const }\{\par
00148         {\cf19 return} pathValues;\par
00149     \}\par
00150 \par
00151 {\cf17 private}:\par
00152     std::string outputfile;\par
00153     {\cf18 bool} hideShell;\par
00154     std::optional<std::string> application;\par
00155     {\cf20 // \{ReqFunc15\}}\par
00156     std::vector<std::string> commands;\par
00157     {\cf20 // Tuple<key, value> - \{ReqFunc15\}}\par
00158     std::vector<std::tuple<std::string, std::string>> environmentVariables;\par
00159     {\cf20 // \{ReqFunc15\}}\par
00160     std::vector<std::string> pathValues;\par
00161 \};\par
00162 \} {\cf20 // namespace parsing}\par
00163 \par
00164 {\cf21 #endif }{\cf20 // FILEDATA_HPP}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/JsonHandler.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/JsonHandler.hpp}
{\xe \v src/include/JsonHandler.hpp}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the JsonHandler class. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "FileData.hpp"}\par
{\f2 #include "LoggingWrapper.hpp"}\par
{\f2 #include <jsoncpp/json.h>}\par
{\f2 #include <memory>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for JsonHandler.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d68/JsonHandler_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d5f/JsonHandler_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b parsing::JsonHandler}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file reads all data from the json file. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b parsing}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The namespace containing everything relevant to parsing. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the JsonHandler class. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Sonia Sinacci, Elena Schwartzbach \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
23.04.2024 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0.1.5 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b parsing::JsonHandler}\par
{\b src/sources/JsonHandler.cpp}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
See LICENSE file \par
}}}{
Definition in file {\b JsonHandler.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
JsonHandler.hpp\par \pard\plain 
{\tc\tcl2 \v src/include/JsonHandler.hpp}
{\xe \v src/include/JsonHandler.hpp}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00015 {\cf21 #ifndef JSONHANDLER_HPP}\par
00016 {\cf21 #define JSONHANDLER_HPP}\par
00017 \par
00018 {\cf21 #include "FileData.hpp"}\par
00019 {\cf21 #include "LoggingWrapper.hpp"}\par
00020 {\cf21 #include <jsoncpp/json.h>}\par
00021 \par
00022 {\cf21 #include <memory>}\par
00023 \par
00036 {\cf17 namespace }parsing \{\par
00037 \par
00047 {\cf17 class }JsonHandler \{\par
00048 {\cf17 public}:\par
00055     JsonHandler() \{\par
00056         LOG_INFO << {\cf22 "Initialising empty JsonHandler"};\par
00057     \}\par
00065     {\cf17 explicit} JsonHandler({\cf17 const} std::string &filename);\par
00075     std::shared_ptr<FileData> getFileData();\par
00076 \par
00077 {\cf17 private}:\par
00093     [[nodiscard]] {\cf17 static} std::shared_ptr<Json::Value>\par
00094     parseFile({\cf17 const} std::string &filename);\par
00104     {\cf18 void} assignOutputFile() {\cf17 const};\par
00112     {\cf18 void} assignHideShell() {\cf17 const};\par
00120     {\cf18 void} assignApplication() {\cf17 const};\par
00133     {\cf18 void} assignEntries() {\cf17 const};\par
00140     {\cf18 void} assignCommand({\cf17 const} Json::Value &entry) {\cf17 const};\par
00147     {\cf18 void} assignEnvironmentVariable({\cf17 const} Json::Value &entry) {\cf17 const};\par
00154     {\cf18 void} assignPathValue({\cf17 const} Json::Value &entry) {\cf17 const};\par
00163     std::shared_ptr<FileData> createFileData();\par
00164 \par
00177     [[nodiscard]] {\cf17 static} {\cf18 bool} containsBadCharacter({\cf17 const} std::string_view &str);\par
00178     std::shared_ptr<Json::Value> root;\par
00179     std::shared_ptr<FileData> data;\par
00180 \};\par
00181 \} {\cf20 // namespace parsing}\par
00182 \par
00183 {\cf21 #endif }{\cf20 // JSONHANDLER_HPP}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/KeyValidator.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/KeyValidator.hpp}
{\xe \v src/include/KeyValidator.hpp}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the KeyValidator class. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "jsoncpp/value.h"}\par
{\f2 #include <optional>}\par
{\f2 #include <unordered_map>}\par
{\f2 #include <unordered_set>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for KeyValidator.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d4a/KeyValidator_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d96/KeyValidator_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b parsing::KeyValidator}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Validates keys of a Json::Value object. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b parsing}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The namespace containing everything relevant to parsing. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the KeyValidator class. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Simon Blum \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2024-04-26 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0.2.2 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b parsing::KeyValidator}\par
{\b src/sources/KeyValidator.cpp}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
See LICENSE file \par
}}}{
Definition in file {\b KeyValidator.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyValidator.hpp\par \pard\plain 
{\tc\tcl2 \v src/include/KeyValidator.hpp}
{\xe \v src/include/KeyValidator.hpp}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00014 {\cf21 #ifndef KEYVALIDATOR_HPP}\par
00015 {\cf21 #define KEYVALIDATOR_HPP}\par
00016 \par
00017 {\cf21 #include "jsoncpp/value.h"}\par
00018 {\cf21 #include <optional>}\par
00019 {\cf21 #include <unordered_map>}\par
00020 {\cf21 #include <unordered_set>}\par
00021 {\cf17 namespace }parsing \{\par
00031 {\cf17 class }KeyValidator \{\par
00032 {\cf17 public}:\par
00038     {\cf17 static} KeyValidator &getInstance();\par
00039 \par
00054     std::vector<std::tuple<int, std::string>>\par
00055     validateKeys({\cf17 const} Json::Value &root, {\cf17 const} std::string &filename);\par
00056 \par
00057 {\cf17 private}:\par
00070     std::vector<std::tuple<int, std::string>>\par
00071     getWrongKeys({\cf17 const} Json::Value &root, {\cf17 const} std::string &filename) {\cf17 const};\par
00072 \par
00092     {\cf18 void} validateTypes({\cf17 const} std::string &filename, {\cf17 const} Json::Value &entry,\par
00093                        {\cf17 const} std::unordered_set<std::string> &entryKeys);\par
00094 \par
00108     std::vector<std::tuple<int, std::string>>\par
00109     validateEntries({\cf17 const} std::string &filename,\par
00110                     {\cf17 const} std::unordered_set<std::string> &entryKeys) {\cf17 const};\par
00111 \par
00124     {\cf17 static} std::optional<int> getUnknownKeyLine({\cf17 const} std::string &filename,\par
00125             {\cf17 const} std::string &wrongKey);\par
00126 \par
00131     std::unordered_set<std::string> validKeys = \{{\cf22 "outputfile"}, {\cf22 "hideshell"},\par
00132         {\cf22 "entries"}, {\cf22 "application"}\par
00133     \};\par
00138     std::unordered_set<std::string> validEntryKeys = \{{\cf22 "type"}, {\cf22 "key"}, {\cf22 "value"},\par
00139         {\cf22 "path"}, {\cf22 "command"}\par
00140     \};\par
00141 \par
00145     std::unordered_map<std::string_view, std::vector<std::string>> typeToKeys = \{\par
00146         \{{\cf22 "EXE"}, \{{\cf22 "command"}\}\}, \{{\cf22 "PATH"}, \{{\cf22 "path"}\}\}, \{{\cf22 "ENV"}, \{{\cf22 "key"}, {\cf22 "value"}\}\}\par
00147     \};\par
00148 \};\par
00149 \} {\cf20 // namespace parsing}\par
00150 \par
00151 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/Utils.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/Utils.hpp}
{\xe \v src/include/Utils.hpp}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Exceptions.hpp"}\par
{\f2 #include <string>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Utils.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/dda/Utils_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d79/Utils_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b utilities::Utils}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Responsible for utility function. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b utilities}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Includes all utilities. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Utils.hpp\par \pard\plain 
{\tc\tcl2 \v src/include/Utils.hpp}
{\xe \v src/include/Utils.hpp}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00018 {\cf21 #ifndef UTILITIES_HPP}\par
00019 {\cf21 #define UTILITIES_HPP}\par
00020 \par
00021 {\cf21 #include "Exceptions.hpp"}\par
00022 {\cf21 #include <string>}\par
00023 \par
00033 {\cf17 namespace }utilities \{\par
00034 \par
00042 {\cf17 class }Utils \{\par
00043 {\cf17 public}:\par
00051     {\cf17 static} {\cf18 void} setupEasyLogging({\cf17 const} std::string &configFile);\par
00052 \par
00066     {\cf17 static} {\cf18 bool}\par
00067     handleParseException({\cf17 const} exceptions::CustomException &e,\par
00068                          {\cf17 const} std::vector<std::string>::iterator &file,\par
00069                          {\cf17 const} std::vector<std::string> &files);\par
00070 \par
00078     {\cf17 static} {\cf18 bool}\par
00079     askToContinue({\cf17 const} std::string &prompt = {\cf22 "Do you want to continue? (Y/N)\\n"});\par
00080 \par
00085     {\cf17 static} {\cf18 void} checkConfigFile({\cf17 const} std::string &configFile);\par
00086 \par
00098     {\cf17 static} {\cf17 const} std::string &checkDirectory(std::string &directory);\par
00099 \par
00110     {\cf17 static} std::string escapeString({\cf17 const} std::string &str);\par
00111 \};\par
00112 \} {\cf20 // namespace utilities}\par
00113 \par
00114 {\cf21 #endif }{\cf20 // UTILITIES_HPP}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/main.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/main.cpp}
{\xe \v src/main.cpp}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the main function. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <LoggingWrapper.hpp>}\par
{\f2 #include <cstdlib>}\par
{\f2 #include <filesystem>}\par
{\f2 #include <fstream>}\par
{\f2 #include <tuple>}\par
{\f2 #include <vector>}\par
{\f2 #include "BatchCreator.hpp"}\par
{\f2 #include "CommandLineHandler.hpp"}\par
{\f2 #include "Exceptions.hpp"}\par
{\f2 #include "JsonHandler.hpp"}\par
{\f2 #include "Utils.hpp"}\par
{\f2 #include "config.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for main.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/dce/main_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::tuple< std::vector< std::string >, std::string > {\b parseAndValidateArgs} (int argc, char *argv[])\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Validates and parses arguments. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::string > {\b validateFiles} (const std::vector< std::string > &files)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the files are valid. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b parseFile} (const std::string &file, const std::string &outputDirectory)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses the given file and writes the output to the output directory. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main function of the program. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the main function. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Elena Schwarzbach, Max Rodler, Simon Blum, Sonia Sinaci \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2024-04-26 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0.2.2\par
}}The main function is responsible for connection all parts of the programm. It calls all relevant classes and finishes when everything is done.{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqOptFunc3\} - Documentation is done using doxygen syntax\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqOptFunc3\} - All Classes, methods, funciton, namespaces and file are documented\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqNonFunc5\} - Source files are found under src/sources, header under src/include\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqNonFunc6\} - All header files can be included withou paths\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqNonFunc7\} - Non source files are included\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqNonFunc8\} - All header files include a "ifndef/define/endif" block\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqOptFunc5\} - Every file has a top comment including the authors\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqOptFunc6\} - Logging is done using easylogging++ library{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
A self written wrapper is used, to allow for parallel output to the stdout and the logfile. Though we don't consider this wrapper part of the project itself and as such is placed within the directorys for external libraries\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Formatting is done via astyle\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
!\{ReqOptFunc7\} - No unit tests are included\par}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
See LICENSE file \par
}}}{
Definition in file {\b main.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:main.cpp}
{\xe \v main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main function of the program. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The main function is responsible for connection all parts of the programm. It calls all relevant classes and finishes when everything is done.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i argc} \cell }{The number of arguments given \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i argv} \cell }{The command line arguments given\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Returns 0 on success, 1 on failure \par
}}}{
Definition at line {\b 85} of file {\b main.cpp}.}\par
{
\ql
References {\b utilities::Utils::checkConfigFile()}, {\b utilities::Utils::handleParseException()}, {\b config::LOG_CONFIG}, {\b parseAndValidateArgs()}, {\b parseFile()}, {\b utilities::Utils::setupEasyLogging()}, and {\b validateFiles()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d0a/main_8cpp_a0ddf1224851353fc92bfbff6f499fa97_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v parseAndValidateArgs\:main.cpp}
{\xe \v main.cpp\:parseAndValidateArgs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::tuple< std::vector< std::string >, std::string > parseAndValidateArgs (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Validates and parses arguments. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i argc} \cell }{Number of arguments provided \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i argv} \cell }{The arguments provided \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A tuple containing the files to be parsed and the output directory \par
}}}{
Definition at line {\b 122} of file {\b main.cpp}.}\par
{
\ql
References {\b utilities::Utils::checkDirectory()}, {\b cli::CommandLineHandler::parseArguments()}, {\b cli::CommandLineHandler::printHelp()}, and {\b exceptions::CustomException::what()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d0a/main_8cpp_ad612c95526cdd7ff2fa78563c0cd666f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d0a/main_8cpp_ad612c95526cdd7ff2fa78563c0cd666f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v parseFile\:main.cpp}
{\xe \v main.cpp\:parseFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void parseFile (const std::string &  {\i file}, const std::string &  {\i outputDirectory})}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses the given file and writes the output to the output directory. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates the Batch file from the given file {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{The file to be parsed \cell }
{\row }
}
}{
Definition at line {\b 190} of file {\b main.cpp}.}\par
{
\ql
References {\b utilities::Utils::askToContinue()}, {\b BatchCreator::getDataStream()}, and {\b parsing::JsonHandler::getFileData()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d0a/main_8cpp_a7c8a82e43100bc97b6aad59a7f7d2f13_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d0a/main_8cpp_a7c8a82e43100bc97b6aad59a7f7d2f13_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v validateFiles\:main.cpp}
{\xe \v main.cpp\:validateFiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< std::string > validateFiles (const std::vector< std::string > &  {\i files})}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the files are valid. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes sures, that provided files exists and checks their file ending {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i files} \cell }{The files to be checked{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\{ReqFunc5\}\par}
\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A vector containing the valid files \par
}}}{
Definition at line {\b 149} of file {\b main.cpp}.}\par
{
\ql
References {\b utilities::Utils::askToContinue()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d0a/main_8cpp_a229a422b4e4be967a1e02c69d8867c77_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d0a/main_8cpp_a229a422b4e4be967a1e02c69d8867c77_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.cpp\par \pard\plain 
{\tc\tcl2 \v src/main.cpp}
{\xe \v src/main.cpp}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00029 {\cf21 #include <LoggingWrapper.hpp>}\par
00030 {\cf21 #include <cstdlib>}\par
00031 {\cf21 #include <filesystem>}\par
00032 {\cf21 #include <fstream>}\par
00033 {\cf21 #include <tuple>}\par
00034 {\cf21 #include <vector>}\par
00035 \par
00036 {\cf21 #include "BatchCreator.hpp"}\par
00037 {\cf21 #include "CommandLineHandler.hpp"}\par
00038 {\cf21 #include "Exceptions.hpp"}\par
00039 {\cf21 #include "JsonHandler.hpp"}\par
00040 {\cf21 #include "Utils.hpp"}\par
00041 {\cf21 #include "config.hpp"}\par
00042 \par
00050 std::tuple<std::vector<std::string>, std::string>\par
00051 parseAndValidateArgs({\cf18 int} argc, {\cf18 char} *argv[]);\par
00052 \par
00062 std::vector<std::string> validateFiles({\cf17 const} std::vector<std::string> &files);\par
00063 \par
00070 {\cf18 void} parseFile({\cf17 const} std::string &file, {\cf17 const} std::string &outputDirectory);\par
00071 \par
00085 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[]) \{\par
00086     {\cf20 // Setup logging}\par
00087     utilities::Utils::checkConfigFile(config::LOG_CONFIG);\par
00088     utilities::Utils::setupEasyLogging(config::LOG_CONFIG);\par
00089     {\cf20 // Parse and validate arguments}\par
00090     {\cf17 auto} [files, outDir] = parseAndValidateArgs(argc, argv);\par
00091     OUTPUT << cli::BOLD << {\cf22 "Parsing the following files:\\n"} << cli::RESET;\par
00092 \par
00093     {\cf19 for} ({\cf17 const} {\cf17 auto} &file : files) \{\par
00094         OUTPUT << {\cf22 "\\t - "} << file << {\cf22 "\\n"};\par
00095     \}\par
00096 \par
00097     files = validateFiles(files);\par
00098 \par
00099     {\cf20 // Loop for \{ReqFunc7\}}\par
00100     {\cf19 for} ({\cf17 auto} file = files.begin(); file != files.end(); ++file) \{\par
00101         OUTPUT << cli::ITALIC << {\cf22 "\\nParsing file: "} << *file << {\cf22 "...\\n"}\par
00102                << cli::RESET;\par
00103 \par
00104         {\cf19 try} \{\par
00105             parseFile(*file, outDir);\par
00106             {\cf20 // Only catch custom exceptions, other exceptions are fatal}\par
00107         \} {\cf19 catch} ({\cf17 const} exceptions::CustomException &e) \{\par
00108             {\cf19 if} (utilities::Utils::handleParseException(e, file, files)) \{\par
00109                 {\cf19 continue};\par
00110             \}\par
00111 \par
00112             exit(1);\par
00113         \}\par
00114     \}\par
00115     OUTPUT << {\cf22 "Done parsing files!\\n"};\par
00116 \par
00117     LOG_INFO << {\cf22 "Exiting..."};\par
00118     {\cf19 return} 0;\par
00119 \}\par
00120 \par
00121 std::tuple<std::vector<std::string>, std::string>\par
00122 parseAndValidateArgs({\cf18 int} argc, {\cf18 char} *argv[]) \{\par
00123     {\cf19 if} (argc < 2) \{\par
00124         LOG_ERROR << {\cf22 "No options given!"};\par
00125         cli::CommandLineHandler::printHelp();\par
00126     \}\par
00127 \par
00128     {\cf17 auto} [outOption, files] = cli::CommandLineHandler::parseArguments(argc, argv);\par
00129     {\cf20 // Set the output directory if given}\par
00130     std::string outDir = outOption.value_or({\cf22 ""});\par
00131 \par
00132     {\cf19 if} (!outDir.empty()) \{\par
00133         {\cf19 try} \{\par
00134             outDir = utilities::Utils::checkDirectory(outDir);\par
00135         \} {\cf19 catch} ({\cf17 const} exceptions::CustomException &e) \{\par
00136             LOG_ERROR << e.what();\par
00137             exit(1);\par
00138         \}\par
00139     \}\par
00140 \par
00141     {\cf19 if} (files.empty()) \{\par
00142         LOG_ERROR << {\cf22 "No files were given as arguments!"};\par
00143         exit(1);\par
00144     \}\par
00145 \par
00146     {\cf19 return} \{files, outDir\};\par
00147 \}\par
00148 \par
00149 std::vector<std::string> validateFiles({\cf17 const} std::vector<std::string> &files) \{\par
00150     std::vector<std::string> validFiles;\par
00151     {\cf20 // Reserve space, to avaid reallocating with each valid file}\par
00152     validFiles.reserve(files.size());\par
00153 \par
00154     {\cf19 for} ({\cf17 const} std::filesystem::path file : files) \{\par
00155         {\cf20 // Check that the file exists}\par
00156         {\cf20 // \{ReqFunc5\}}\par
00157         {\cf19 if} (!std::filesystem::is_regular_file(file)) \{\par
00158             LOG_ERROR << {\cf22 "The file \\""} << file << {\cf22 "\\" does not exist!"};\par
00159 \par
00160             {\cf19 if} (files.size() > 1 && !utilities::Utils::askToContinue()) \{\par
00161                 OUTPUT << {\cf22 "Aborting...\\n"};\par
00162                 LOG_INFO << {\cf22 "Application ended by user Input"};\par
00163                 exit(1);\par
00164             \}\par
00165 \par
00166             {\cf19 continue};\par
00167         \}\par
00168 \par
00169         {\cf20 // Check if the file ends in .json}\par
00170         {\cf19 if} (file.extension() != {\cf22 ".json"}) \{\par
00171             LOG_WARNING << {\cf22 "The file \\""} << file << R{\cf22 "(" does not end in ".json")";}\par
00172 {\cf22             OUTPUT << }{\cf22 "If the file is not in JSON Format, continuing may "}\par
00173                    {\cf22 "result in\\nunexpected behaviour!\\n"};\par
00174 \par
00175             {\cf19 if} (!utilities::Utils::askToContinue()) \{\par
00176                 OUTPUT << {\cf22 "Aborting...\\n"};\par
00177                 LOG_INFO << {\cf22 "Application ended by user Input"};\par
00178                 exit(1);\par
00179             \}\par
00180         \}\par
00181 \par
00182         validFiles.push_back(file.string());\par
00183     \}\par
00184 \par
00185     {\cf20 // Shrinks the vector if invalid files were found}\par
00186     validFiles.shrink_to_fit();\par
00187     {\cf19 return} validFiles;\par
00188 \}\par
00189 \par
00190 {\cf18 void} parseFile({\cf17 const} std::string &file, {\cf17 const} std::string &outputDirectory) \{\par
00191     parsing::JsonHandler jsonHandler(file);\par
00192     {\cf17 const} {\cf17 auto} fileData = jsonHandler.getFileData();\par
00193     BatchCreator batchCreator(fileData);\par
00194     {\cf17 const} std::shared_ptr<std::stringstream> dataStream =\par
00195             batchCreator.getDataStream();\par
00196     {\cf20 // Full filename is output directory + output file}\par
00197     {\cf20 // \{ReqFunc18\}}\par
00198     {\cf17 const} std::string outputFileName =\par
00199             outputDirectory + fileData->getOutputFile();\par
00200 \par
00201     {\cf19 if} (std::filesystem::is_regular_file(outputFileName)) \{\par
00202         {\cf19 if} (!utilities::Utils::askToContinue(\par
00203                 {\cf22 "The file already exists, do you want to overwrite it? (y/n) "})) \{\par
00204             OUTPUT << {\cf22 "Skipping file...\\n"};\par
00205             {\cf19 return};\par
00206         \}\par
00207         OUTPUT << {\cf22 "Overwriting file...\\n"};\par
00208     \}\par
00209 \par
00210     std::ofstream outFile(outputFileName);\par
00211 \par
00212     {\cf19 if} (!outFile.good()) \{\par
00213         {\cf19 throw} exceptions::FailedToOpenFileException(outputFileName);\par
00214     \}\par
00215 \par
00216     outFile << dataStream->str();\par
00217 \}\par
00218 \par
00219 {\cf20 // Initialize easylogging++}\par
00220 {\cf20 // Moved to bottom because it messed with doxygen}\par
00221 INITIALIZE_EASYLOGGINGPP\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/sources/BatchCreator.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/sources/BatchCreator.cpp}
{\xe \v src/sources/BatchCreator.cpp}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the implementation of the {\b BatchCreator} class. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "BatchCreator.hpp"}\par
{\f2 #include "LoggingWrapper.hpp"}\par
{\f2 #include <utility>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for BatchCreator.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d6a/BatchCreator_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the implementation of the {\b BatchCreator} class. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Maximilian Rodler \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
22.04.2024 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0.2.2 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b src/include/BatchCreator.hpp}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
See LICENSE file \par
}}}{
Definition in file {\b BatchCreator.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BatchCreator.cpp\par \pard\plain 
{\tc\tcl2 \v src/sources/BatchCreator.cpp}
{\xe \v src/sources/BatchCreator.cpp}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00013 {\cf21 #include "BatchCreator.hpp"}\par
00014 {\cf21 #include "LoggingWrapper.hpp"}\par
00015 {\cf21 #include <utility>}\par
00016 \par
00017 \par
00018 BatchCreator::BatchCreator(std::shared_ptr<parsing::FileData> fileData)\par
00019     : fileData(std::move(fileData)) \{\par
00020     LOG_INFO << {\cf22 "Initializing BatchCreator"};\par
00021     this->dataStream = std::make_shared<std::stringstream>();\par
00022     this->createBatch();\par
00023 \}\par
00024 \par
00025 {\cf18 void} BatchCreator::createBatch(){\cf17  const }\{\par
00026     LOG_INFO << {\cf22 "Creating Batch file"};\par
00027     this->writeStart();\par
00028     this->writeHideShell();\par
00029     this->writeCommands();\par
00030     this->writeEnvVariables();\par
00031     this->writePathVariables();\par
00032     this->writeApplication();\par
00033     this->writeEnd();\par
00034 \}\par
00035 \par
00036 {\cf18 void} BatchCreator::writeStart(){\cf17  const }\{\par
00037     LOG_INFO << {\cf22 "writing Start of Batch"};\par
00038     {\cf20 // \{ReqFunc24\} - \\r\\n}\par
00039     *this->dataStream << {\cf22 "@ECHO OFF\\r\\nC:\\\\Windows\\\\System32\\\\cmd.exe "};\par
00040 \}\par
00041 \par
00042 {\cf18 void} BatchCreator::writeHideShell(){\cf17  const }\{\par
00043     {\cf19 if} (this->fileData->getHideShell()) \{\par
00044         LOG_INFO << {\cf22 "writing hide Shell"};\par
00045         *this->dataStream << {\cf22 "/c "};\par
00046     \}\par
00047     {\cf19 else} \{\par
00048         LOG_INFO << {\cf22 "writing show Shell"};\par
00049         *this->dataStream << {\cf22 "/k "};\par
00050     \}\par
00051 \}\par
00052 \par
00053 {\cf18 void} BatchCreator::writeCommands(){\cf17  const }\{\par
00054     LOG_INFO << {\cf22 "writing Commands"};\par
00055     *this->dataStream << {\cf22 "\\""};\par
00056 \par
00057     {\cf19 for} ({\cf17 const} std::string &command : this->fileData->getCommands()) \{\par
00058         *this->dataStream << command << {\cf22 " && "};\par
00059     \}\par
00060 \}\par
00061 \par
00062 {\cf18 void} BatchCreator::writeEnvVariables(){\cf17  const }\{\par
00063     LOG_INFO << {\cf22 "writing Environment Variables"};\par
00064 \par
00065     {\cf19 for} ({\cf17 const} {\cf17 auto} &[key, value] : this->fileData->getEnvironmentVariables()) \{\par
00066         *this->dataStream << {\cf22 "set "} << key << {\cf22 "="} << value << {\cf22 " && "};\par
00067     \}\par
00068 \}\par
00069 \par
00070 {\cf18 void} BatchCreator::writePathVariables(){\cf17  const }\{\par
00071     LOG_INFO << {\cf22 "writing Path Variables"};\par
00072     *this->dataStream << {\cf22 "set path="};\par
00073 \par
00074     {\cf19 for} ({\cf17 const} std::string &path : this->fileData->getPathValues()) \{\par
00075         *this->dataStream << path << {\cf22 ";"};\par
00076     \}\par
00077 \par
00078     *this->dataStream << {\cf22 "%path%"};\par
00079 \}\par
00080 \par
00081 {\cf18 void} BatchCreator::writeApplication(){\cf17  const }\{\par
00082     std::string appName = this->fileData->getOutputFile();\par
00083     appName = appName.substr(0, appName.find({\cf23 '.'}));\par
00084 \par
00085     {\cf19 if} (this->fileData->getApplication().has_value()) \{\par
00086         LOG_INFO << {\cf22 "writing start Application"};\par
00087         *this->dataStream << {\cf22 " && start \\""} << appName\par
00088                           << {\cf22 "\\" "}\par
00089                           {\cf20 // \{ReqFunc24\} - \\r\\n}\par
00090                           << this->fileData->getApplication().value() << {\cf22 "\\"\\r\\n"};\par
00091     \}\par
00092     {\cf19 else} \{\par
00093         LOG_INFO << {\cf22 "writing not start Application"};\par
00094         {\cf20 // \{ReqFunc24\} - \\r\\n}\par
00095         *this->dataStream << {\cf22 "\\"\\r\\n"};\par
00096     \}\par
00097 \}\par
00098 \par
00099 {\cf18 void} BatchCreator::writeEnd(){\cf17  const }\{\par
00100     *this->dataStream << {\cf22 "@ECHO ON"};\par
00101 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/sources/CommandLineHandler.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/sources/CommandLineHandler.cpp}
{\xe \v src/sources/CommandLineHandler.cpp}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation for the Command Line Interface. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CommandLineHandler.hpp"}\par
{\f2 #include "LoggingWrapper.hpp"}\par
{\f2 #include "config.hpp"}\par
{\f2 #include <cstdlib>}\par
{\f2 #include <cstring>}\par
{\f2 #include <getopt.h>}\par
{\f2 #include <vector>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CommandLineHandler.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d9c/CommandLineHandler_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b cli}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Includes everything regarding the CLI. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation for the Command Line Interface. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Simon Blum \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2024-04-26 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0.2.2 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
src/include/utility/CommandLineHandler.hpp\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
See LICENSE file \par
}}}{
Definition in file {\b CommandLineHandler.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CommandLineHandler.cpp\par \pard\plain 
{\tc\tcl2 \v src/sources/CommandLineHandler.cpp}
{\xe \v src/sources/CommandLineHandler.cpp}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00013 {\cf21 #include "CommandLineHandler.hpp"}\par
00014 {\cf21 #include "LoggingWrapper.hpp"}\par
00015 {\cf21 #include "config.hpp"}\par
00016 {\cf21 #include <cstdlib>}\par
00017 {\cf21 #include <cstring>}\par
00018 {\cf21 #include <getopt.h>}\par
00019 {\cf21 #include <vector>}\par
00020 \par
00021 {\cf17 namespace }cli \{\par
00022 {\cf18 void} CommandLineHandler::printHelp() \{\par
00023     LOG_INFO << {\cf22 "Printing help message..."};\par
00024     OUTPUT << BOLD << {\cf22 "Usage:\\n"}\par
00025            << RESET << {\cf22 "----------\\n"}\par
00026            << config::EXECUTABLE_NAME << {\cf22 " [options] [filenames]\\n"}\par
00027            << {\cf22 "\\n"}\par
00028            << BOLD << {\cf22 "Options:\\n"}\par
00029            << RESET << {\cf22 "----------\\n"}\par
00030            << {\cf22 "-o, --outdir\\t [path]\\t\\tOutput the batch file to the given "}\par
00031            {\cf22 "dir\\n"}\par
00032            << {\cf22 "-h, --help\\t\\t\\tPrint this help message\\n"}\par
00033            << {\cf22 "-v, --version\\t\\t\\tPrint the version number\\n"}\par
00034            << {\cf22 "-c, --credits\\t\\t\\tPrint the credits\\n\\n"}\par
00035            << {\cf22 "    --verbose\\t\\t\\tStart the application in verbose mode\\n"}\par
00036            << ITALIC\par
00037            << {\cf22 "          \\t\\t\\tNote: Verbose flag should be passed first!\\n\\n"}\par
00038            << RESET << BOLD << {\cf22 "Filenames:\\n"}\par
00039            << RESET << {\cf22 "----------\\n"}\par
00040            << {\cf22 "The json files to be processed into batch files.\\n"}\par
00041            << {\cf22 "Multiple files should be seperated by spaces!\\n\\n"};\par
00042     exit(0);\par
00043 \}\par
00044 {\cf18 void} CommandLineHandler::printVersion() \{\par
00045     LOG_INFO << {\cf22 "Printing version number..."};\par
00046     OUTPUT << config::PROJECT_NAME << {\cf22 " v"} << config::MAJOR_VERSION << {\cf22 "."}\par
00047            << config::MINOR_VERSION << {\cf22 "."} << config::PATCH_VERSION << {\cf22 "\\n"};\par
00048     exit(0);\par
00049 \}\par
00050 {\cf18 void} CommandLineHandler::printCredits() \{\par
00051     LOG_INFO << {\cf22 "Printing credits..."};\par
00052     OUTPUT << BOLD << {\cf22 "Project information:\\n"}\par
00053            << RESET << {\cf22 "----------\\n"}\par
00054            << CYAN << BOLD << config::PROJECT_NAME << RESET << {\cf22 " v"}\par
00055            << config::MAJOR_VERSION << {\cf22 "."} << config::MINOR_VERSION << {\cf22 "."}\par
00056            << config::PATCH_VERSION << {\cf22 "\\n"}\par
00057            << {\cf22 "\\n"}\par
00058            << config::DESCRIPTION << {\cf22 "\\n"}\par
00059            << {\cf22 "\\n"}\par
00060            << GREEN << {\cf22 "Authors: "} << RESET << ITALIC << config::AUTHORS << RESET\par
00061            << {\cf22 "\\n"}\par
00062            << GREEN << {\cf22 "Documentation: "} << RESET << ITALIC\par
00063            << config::HOMEPAGE_URL << RESET << GREEN << {\cf22 "\\nContact: "} << RESET\par
00064            << ITALIC << {\cf22 "simon21.blum@gmail.com"} << {\cf22 "\\n"};\par
00065     exit(0);\par
00066 \}\par
00067 \par
00068 std::tuple<std::optional<std::string>, std::vector<std::string>>\par
00069 CommandLineHandler::parseArguments({\cf18 int} argc, {\cf18 char} *argv[]) \{\par
00070     LOG_INFO << {\cf22 "Parsing arguments..."};\par
00071     std::vector<std::string> files;\par
00072     std::optional<std::string> outDir;\par
00073 \par
00074     {\cf19 while} ({\cf17 true}) \{\par
00075         {\cf18 int} optIndex = -1;\par
00076         {\cf17 struct }option longOption = \{\};\par
00077         {\cf17 const} {\cf17 auto} result = getopt_long(argc, argv, {\cf22 "hvco:"}, options, &optIndex);\par
00078 \par
00079         {\cf19 if} (result == -1) \{\par
00080             LOG_INFO << {\cf22 "End of options reached"};\par
00081             {\cf19 break};\par
00082         \}\par
00083 \par
00084         {\cf19 switch} (result) \{\par
00085         {\cf19 case} {\cf23 '?'}:\par
00086             LOG_ERROR << {\cf22 "Invalid Option (argument)"};\par
00087             CommandLineHandler::printHelp();\par
00088 \par
00089         {\cf19 case} {\cf23 'h'}:\par
00090             LOG_INFO << {\cf22 "Help option detected"};\par
00091             CommandLineHandler::printHelp();\par
00092 \par
00093         {\cf19 case} {\cf23 'v'}:\par
00094             LOG_INFO << {\cf22 "Version option detected"};\par
00095             CommandLineHandler::printVersion();\par
00096 \par
00097         {\cf19 case} {\cf23 'c'}:\par
00098             LOG_INFO << {\cf22 "Credit option detected"};\par
00099             CommandLineHandler::printCredits();\par
00100 \par
00101         {\cf19 case} {\cf23 'o'}:\par
00102             LOG_INFO << {\cf22 "Output option detected"};\par
00103             outDir = optarg;\par
00104             {\cf19 break};\par
00105 \par
00106         {\cf19 case} 0:\par
00107             LOG_INFO << {\cf22 "Long option without short version detected"};\par
00108             longOption = options[optIndex];\par
00109             LOG_INFO << {\cf22 "Option: "} << longOption.name << {\cf22 " given"};\par
00110 \par
00111             {\cf19 if} (strcmp(longOption.name, {\cf22 "verbose"}) == 0) \{\par
00112                 logging::setVerboseMode({\cf17 true});\par
00113                 LOG_INFO << {\cf22 "Verbose mode activated"};\par
00114             \}\par
00115 \par
00116             {\cf19 break};\par
00117 \par
00118         {\cf19 default}:\par
00119             LOG_ERROR << {\cf22 "Default case for options reached!"};\par
00120             {\cf19 break};\par
00121         \}\par
00122     \}\par
00123 \par
00124     LOG_INFO << {\cf22 "Options have been parsed"};\par
00125     LOG_INFO << {\cf22 "Checking for arguments..."};\par
00126 \par
00127     {\cf20 // Loop for \{reqFunc5\}}\par
00128     {\cf19 while} (optind < argc) \{\par
00129         LOG_INFO << {\cf22 "Adding file: "} << argv[optind];\par
00130         {\cf20 // Vector for \{reqFunc7\}}\par
00131         files.emplace_back(argv[optind++]);\par
00132     \}\par
00133 \par
00134     LOG_INFO << {\cf22 "Arguments and options have been parsed"};\par
00135     {\cf19 return} \{outDir, files\};\par
00136 \}\par
00137 \} {\cf20 // namespace cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/sources/FileData.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/sources/FileData.cpp}
{\xe \v src/sources/FileData.cpp}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of the FileData class. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "FileData.hpp"}\par
{\f2 #include "Exceptions.hpp"}\par
{\f2 #include "LoggingWrapper.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for FileData.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d56/FileData_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b parsing}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The namespace containing everything relevant to parsing. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of the FileData class. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Elena Schwarzbach, Sonia Sinacci \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2024-04-26 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0.1.6 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b src/include/FileData.hpp}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
See LICENSE file \par
}}}{
Definition in file {\b FileData.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FileData.cpp\par \pard\plain 
{\tc\tcl2 \v src/sources/FileData.cpp}
{\xe \v src/sources/FileData.cpp}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00013 {\cf21 #include "FileData.hpp"}\par
00014 {\cf21 #include "Exceptions.hpp"}\par
00015 {\cf21 #include "LoggingWrapper.hpp"}\par
00016 \par
00017 {\cf17 namespace }parsing \{\par
00018 {\cf18 void} FileData::setOutputFile(std::string &newOutputfile) \{\par
00019     LOG_INFO << {\cf22 "Setting outputfile to..."};\par
00020 \par
00021     {\cf20 // If no value for key "outputfile"}\par
00022     {\cf19 if} (newOutputfile.empty()) \{\par
00023         LOG_INFO << {\cf22 "Escalating error to ErrorHandler::invalidValue!"};\par
00024         {\cf19 throw} exceptions::InvalidValueException({\cf22 "outputfile"},\par
00025                                                 {\cf22 "Outputfile can't be empty!"});\par
00026     \}\par
00027 \par
00028     {\cf20 // If outputfile is already set}\par
00029     {\cf19 if} (!this->outputfile.empty()) \{\par
00030         LOG_INFO << {\cf22 "Escalating error to ErrorHandler::invalidValue!"};\par
00031         {\cf19 throw} exceptions::InvalidValueException({\cf22 "outputfile"},\par
00032                                                 {\cf22 "Outputfile is already set!"});\par
00033     \}\par
00034 \par
00035     {\cf20 // If outputfile does not end with ".bat"}\par
00036     {\cf19 if} (!newOutputfile.ends_with({\cf22 ".bat"})) \{\par
00037         newOutputfile += {\cf22 ".bat"};\par
00038         LOG_WARNING << {\cf22 "Outputfile does not end with \\".bat\\", adding it now: "}\par
00039                     << newOutputfile;\par
00040     \}\par
00041 \par
00042     this->outputfile = newOutputfile;\par
00043     LOG_INFO << {\cf22 "Outputfile set to: "} << this->outputfile << {\cf22 "\\n"};\par
00044 \}\par
00045 \par
00046 {\cf18 void} FileData::setApplication({\cf17 const} std::string &newApplication) \{\par
00047     {\cf19 if} (newApplication.empty()) \{\par
00048         LOG_INFO << {\cf22 "newApplication empty, returning"};\par
00049         {\cf19 return};\par
00050     \}\par
00051 \par
00052     LOG_INFO << {\cf22 "Setting application to: "} << newApplication << {\cf22 "\\n"};\par
00053     this->application.emplace(newApplication);\par
00054 \}\par
00055 \par
00056 {\cf18 void} FileData::addCommand({\cf17 const} std::string &command) \{\par
00057     {\cf19 if} (command.empty()) \{\par
00058         LOG_INFO << {\cf22 "Escalating error to ErrorHandler::invalidValue!"};\par
00059         {\cf19 throw} exceptions::InvalidValueException({\cf22 "command"},\par
00060                                                 {\cf22 "Command value is empty!"});\par
00061     \}\par
00062 \par
00063     LOG_INFO << {\cf22 "Adding command: "} << command << {\cf22 "\\n"};\par
00064     this->commands.push_back(command);\par
00065 \}\par
00066 \par
00067 {\cf18 void} FileData::addEnvironmentVariable({\cf17 const} std::string &name,\par
00068                                       {\cf17 const} std::string &value) \{\par
00069     {\cf19 if} (name.empty()) \{\par
00070         LOG_INFO << {\cf22 "Escalating error to ErrorHandler::invalidValue!"};\par
00071         {\cf19 throw} exceptions::InvalidValueException({\cf22 "name"}, {\cf22 "Name value is empty!"});\par
00072     \}\par
00073 \par
00074     {\cf19 if} (value.empty()) \{\par
00075         LOG_INFO << {\cf22 "Escalating error to ErrorHandler::invalidValue!"};\par
00076         {\cf19 throw} exceptions::InvalidValueException({\cf22 "key"}, {\cf22 "Key value is empty"});\par
00077     \}\par
00078 \par
00079     LOG_INFO << {\cf22 "Adding environment variable: "} << name << {\cf22 "="} << value << {\cf22 "\\n"};\par
00080     this->environmentVariables.emplace_back(name, value);\par
00081 \}\par
00082 \par
00083 {\cf18 void} FileData::addPathValue({\cf17 const} std::string &pathValue) \{\par
00084     {\cf19 if} (pathValue.empty()) \{\par
00085         LOG_INFO << {\cf22 "Escalating error to ErrorHandler::invalidValue!"};\par
00086         {\cf19 throw} exceptions::InvalidValueException({\cf22 "path"}, {\cf22 "Path value is empty"});\par
00087     \}\par
00088 \par
00089     LOG_INFO << {\cf22 "Adding path value: "} << pathValue << {\cf22 "\\n"};\par
00090     this->pathValues.push_back(pathValue);\par
00091 \}\par
00092 \} {\cf20 // namespace parsing}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/sources/JsonHandler.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/sources/JsonHandler.cpp}
{\xe \v src/sources/JsonHandler.cpp}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of the JsonHandler class. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "JsonHandler.hpp"}\par
{\f2 #include "Exceptions.hpp"}\par
{\f2 #include "FileData.hpp"}\par
{\f2 #include "KeyValidator.hpp"}\par
{\f2 #include "LoggingWrapper.hpp"}\par
{\f2 #include "Utils.hpp"}\par
{\f2 #include <algorithm>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for JsonHandler.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d03/JsonHandler_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b parsing}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The namespace containing everything relevant to parsing. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of the JsonHandler class. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Elena Schwarzbach, Sonia Sinacci \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2024-04-16 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0.1.6 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b src/include/JsonHandler.hpp}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
See LICENSE file \par
}}}{
Definition in file {\b JsonHandler.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
JsonHandler.cpp\par \pard\plain 
{\tc\tcl2 \v src/sources/JsonHandler.cpp}
{\xe \v src/sources/JsonHandler.cpp}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00013 {\cf21 #include "JsonHandler.hpp"}\par
00014 {\cf21 #include "Exceptions.hpp"}\par
00015 {\cf21 #include "FileData.hpp"}\par
00016 {\cf21 #include "KeyValidator.hpp"}\par
00017 {\cf21 #include "LoggingWrapper.hpp"}\par
00018 {\cf21 #include "Utils.hpp"}\par
00019 \par
00020 {\cf21 #include <algorithm>}\par
00021 \par
00022 {\cf17 namespace }parsing \{\par
00023 JsonHandler::JsonHandler({\cf17 const} std::string &filename) \{\par
00024     LOG_INFO << {\cf22 "Initializing JSONHandler with filename: "} << filename << {\cf22 "\\n"};\par
00025     this->root = parseFile(filename);\par
00026 \}\par
00027 \par
00028 std::shared_ptr<Json::Value> JsonHandler::parseFile({\cf17 const} std::string &filename)\par
00029 \par
00030 \{\par
00031     LOG_INFO << {\cf22 "Parsing file: "} << filename << {\cf22 "\\n"};\par
00032     {\cf20 // Can open files anywhere with relative/absolute path}\par
00033     {\cf20 // - \{ReqFunc5\}}\par
00034     std::ifstream file(filename);\par
00035     Json::Value newRoot;\par
00036 \par
00037     {\cf20 // Json::Reader.parse() returns false if parsing fails}\par
00038     {\cf19 if} (Json::Reader reader; !reader.parse(file, newRoot)) \{\par
00039         {\cf19 throw} exceptions::ParsingException(filename);\par
00040     \}\par
00041 \par
00042     {\cf20 // Validate keys}\par
00043     {\cf20 // Check for errors}\par
00044     {\cf19 if} ({\cf17 auto} errors = KeyValidator::getInstance().validateKeys(newRoot, filename);\par
00045             !errors.empty()) \{\par
00046         {\cf19 throw} exceptions::InvalidKeyException(errors);\par
00047     \}\par
00048 \par
00049     LOG_INFO << {\cf22 "File \\""} << filename << {\cf22 "\\" has been parsed\\n"};\par
00050     {\cf19 return} std::make_shared<Json::Value>(newRoot);\par
00051 \}\par
00052 \par
00053 std::shared_ptr<FileData> JsonHandler::getFileData() \{\par
00054     LOG_INFO << {\cf22 "Creating FileData object for return...\\n"};\par
00055     {\cf19 return} this->createFileData();\par
00056 \}\par
00057 \par
00058 std::shared_ptr<FileData> JsonHandler::createFileData() \{\par
00059     LOG_INFO << {\cf22 "Creating FileData object...\\n"};\par
00060     this->data = std::make_shared<FileData>();\par
00061     this->assignOutputFile();\par
00062     this->assignHideShell();\par
00063     this->assignApplication();\par
00064     this->assignEntries();\par
00065     {\cf19 return} this->data;\par
00066 \}\par
00067 \par
00068 {\cf18 void} JsonHandler::assignOutputFile(){\cf17  const }\{\par
00069     LOG_INFO << {\cf22 "Assigning outputfile...\\n"};\par
00070     std::string outputFile = this->root->get({\cf22 "outputfile"}, {\cf22 ""}).asString();\par
00071     {\cf19 if} (containsBadCharacter(outputFile)) \{\par
00072         outputFile = utilities::Utils::escapeString(outputFile);\par
00073         {\cf19 throw} exceptions::ContainsBadCharacterException(outputFile);\par
00074     \}\par
00075     this->data->setOutputFile(outputFile);\par
00076 \}\par
00077 \par
00078 {\cf18 void} JsonHandler::assignHideShell(){\cf17  const }\{\par
00079     LOG_INFO << {\cf22 "Assigning hide shell...\\n"};\par
00080     {\cf20 // If the 'hideshell' key is not given, it defaults to false}\par
00081     this->data->setHideShell(this->root->get({\cf22 "hideshell"}, {\cf17 false}).asBool());\par
00082 \}\par
00083 \par
00084 {\cf18 void} JsonHandler::assignApplication(){\cf17  const }\{\par
00085     LOG_INFO << {\cf22 "Assigning application...\\n"};\par
00086     std::string application = this->root->get({\cf22 "application"}, {\cf22 ""}).asString();\par
00087     {\cf19 if} (containsBadCharacter(application)) \{\par
00088         application = utilities::Utils::escapeString(application);\par
00089         {\cf19 throw} exceptions::ContainsBadCharacterException(application);\par
00090     \}\par
00091     this->data->setApplication(application);\par
00092 \}\par
00093 \par
00094 {\cf18 void} JsonHandler::assignEntries(){\cf17  const }\{\par
00095     LOG_INFO << {\cf22 "Assigning entries...\\n"};\par
00096 \par
00097     {\cf19 for} ({\cf17 const} {\cf17 auto} &entry : this->root->get({\cf22 "entries"}, {\cf22 ""})) \{\par
00098         std::string entryType = entry.get({\cf22 "type"}, {\cf22 ""}).asString();\par
00099 \par
00100         {\cf19 if} (entryType == {\cf22 "EXE"}) \{\par
00101             LOG_INFO << {\cf22 "Calling function to assign command...\\n"};\par
00102             this->assignCommand(entry);\par
00103         \} {\cf19 else} {\cf19 if} (entryType == {\cf22 "ENV"}) \{\par
00104             LOG_INFO << {\cf22 "Calling function to assign environment variable...\\n"};\par
00105             this->assignEnvironmentVariable(entry);\par
00106         \} {\cf19 else} {\cf19 if} (entryType == {\cf22 "PATH"}) \{\par
00107             LOG_INFO << {\cf22 "Calling function to assign path value...\\n"};\par
00108             this->assignPathValue(entry);\par
00109         \} {\cf19 else} \{\par
00110             {\cf20 // Due to validation beforehand - this should never be reached!}\par
00111             {\cf19 throw} exceptions::UnreachableCodeException(\par
00112                 {\cf22 "Unknown entries should be caught by KeyValidator!\\nPlease report "}\par
00113                 {\cf22 "this bug!"});\par
00114         \}\par
00115     \}\par
00116 \}\par
00117 \par
00118 {\cf18 void} JsonHandler::assignCommand({\cf17 const} Json::Value &entry){\cf17  const }\{\par
00119     LOG_INFO << {\cf22 "Assigning command...\\n"};\par
00120     std::string command = entry.get({\cf22 "command"}, {\cf22 ""}).asString();\par
00121     {\cf19 if} (containsBadCharacter(command)) \{\par
00122         command = utilities::Utils::escapeString(command);\par
00123         {\cf19 throw} exceptions::ContainsBadCharacterException(command);\par
00124     \}\par
00125     this->data->addCommand(command);\par
00126 \}\par
00127 \par
00128 {\cf18 void} JsonHandler::assignEnvironmentVariable({\cf17 const} Json::Value &entry){\cf17  const }\{\par
00129     LOG_INFO << {\cf22 "Assigning environment variable...\\n"};\par
00130     std::string key = entry.get({\cf22 "key"}, {\cf22 ""}).asString();\par
00131     std::string value = entry.get({\cf22 "value"}, {\cf22 ""}).asString();\par
00132 \par
00133     {\cf19 if} (containsBadCharacter(key)) \{\par
00134         key = utilities::Utils::escapeString(key);\par
00135         {\cf19 throw} exceptions::ContainsBadCharacterException(key);\par
00136     \}\par
00137     {\cf19 if} (containsBadCharacter(value)) \{\par
00138         value = utilities::Utils::escapeString(value);\par
00139         {\cf19 throw} exceptions::ContainsBadCharacterException(value);\par
00140     \}\par
00141     this->data->addEnvironmentVariable(key, value);\par
00142 \}\par
00143 \par
00144 {\cf18 void} JsonHandler::assignPathValue({\cf17 const} Json::Value &entry){\cf17  const }\{\par
00145     LOG_INFO << {\cf22 "Assigning path value...\\n"};\par
00146     std::string path = entry.get({\cf22 "path"}, {\cf22 ""}).asString();\par
00147     {\cf19 if} (containsBadCharacter(path)) \{\par
00148         path = utilities::Utils::escapeString(path);\par
00149         {\cf19 throw} exceptions::ContainsBadCharacterException(path);\par
00150     \}\par
00151     this->data->addPathValue(path);\par
00152 \}\par
00153 \par
00154 {\cf18 bool} JsonHandler::containsBadCharacter({\cf17 const} std::string_view &str) \{\par
00155 \par
00156     {\cf20 // Set of characters which may not be in the string}\par
00157     {\cf17 static} {\cf17 const} std::unordered_set<char> badChars = \{\par
00158         {\cf23 '\\n'}, {\cf23 '\\t'}, {\cf23 '\\r'}, {\cf23 '\\0'}, {\cf22 '\\x1A'}, {\cf23 '|'}, {\cf23 ';'}, {\cf23 '<'}, {\cf23 '>'}, {\cf23 '!'}, {\cf23 '%'}, {\cf23 '"'}, {\cf23 '\\''}\par
00159     \};\par
00160 \par
00161     {\cf20 // Lambda function which returns true, if the char is bad}\par
00162     {\cf17 auto} isBadCharacter = []({\cf18 char} c) \{\par
00163         {\cf19 return} badChars.contains(c);\par
00164     \};\par
00165 \par
00166     {\cf19 return} std::ranges::any_of(str, isBadCharacter);\par
00167 \}\par
00168 \} {\cf20 // namespace parsing}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/sources/KeyValidator.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/sources/KeyValidator.cpp}
{\xe \v src/sources/KeyValidator.cpp}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation for the KeyValidator class. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "KeyValidator.hpp"}\par
{\f2 #include "Exceptions.hpp"}\par
{\f2 #include "LoggingWrapper.hpp"}\par
{\f2 #include <optional>}\par
{\f2 #include <regex>}\par
{\f2 #include <vector>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for KeyValidator.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d2f/KeyValidator_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b parsing}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The namespace containing everything relevant to parsing. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation for the KeyValidator class. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Simon Blum \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2024-04-26 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0.2.2 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b src/include/KeyValidator.hpp}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
See LICENSE file \par
}}}{
Definition in file {\b KeyValidator.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyValidator.cpp\par \pard\plain 
{\tc\tcl2 \v src/sources/KeyValidator.cpp}
{\xe \v src/sources/KeyValidator.cpp}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00012 {\cf21 #include "KeyValidator.hpp"}\par
00013 {\cf21 #include "Exceptions.hpp"}\par
00014 {\cf21 #include "LoggingWrapper.hpp"}\par
00015 {\cf21 #include <optional>}\par
00016 {\cf21 #include <regex>}\par
00017 {\cf21 #include <vector>}\par
00018 \par
00019 {\cf17 namespace }parsing \{\par
00020 KeyValidator &KeyValidator::getInstance() \{\par
00021     {\cf17 static} KeyValidator keyValidator;\par
00022     LOG_INFO << {\cf22 "Returning KeyValidator instance!"};\par
00023     {\cf19 return} keyValidator;\par
00024 \}\par
00025 \par
00026 std::vector<std::tuple<int, std::string>>\par
00027 KeyValidator::validateKeys({\cf17 const} Json::Value &root,\par
00028                            {\cf17 const} std::string &filename) \{\par
00029     LOG_INFO << {\cf22 "Validating keys for file "} << filename;\par
00030     std::vector<std::tuple<int, std::string>> wrongKeys =\par
00031         getWrongKeys(root, filename);\par
00032 \par
00033     {\cf20 // Inline declaration to prevent leaking in outer scope}\par
00034     {\cf19 for} (Json::Value entries = root.get({\cf22 "entries"}, {\cf22 ""});\par
00035             {\cf17 const} {\cf17 auto} &entry : entries) \{\par
00036         LOG_INFO << {\cf22 "Validating entry"};\par
00037         {\cf17 const} {\cf17 auto} entryKeys = entry.getMemberNames();\par
00038         {\cf20 // Create a set of the entry keys for faster lookup (O(1) instead of O(n))}\par
00039         std::unordered_set<std::string> entryKeysSet(entryKeys.begin(),\par
00040                 entryKeys.end());\par
00041 \par
00042         {\cf17 const} {\cf17 auto} wrongEntries = validateEntries(filename, entryKeysSet);\par
00043 \par
00044         {\cf20 // Combine wrong keys}\par
00045         wrongKeys.insert(wrongKeys.end(), wrongEntries.begin(), wrongEntries.end());\par
00046 \par
00047         LOG_INFO << {\cf22 "Validating types for entry"};\par
00048         validateTypes(filename, entry, entryKeysSet);\par
00049     \}\par
00050 \par
00051     {\cf19 return} wrongKeys;\par
00052 \}\par
00053 \par
00054 std::vector<std::tuple<int, std::string>>\par
00055 KeyValidator::getWrongKeys({\cf17 const} Json::Value &root,\par
00056                            {\cf17 const} std::string &filename){\cf17  const }\{\par
00057     std::vector<std::tuple<int, std::string>> wrongKeys = \{\};\par
00058 \par
00059     LOG_INFO << {\cf22 "Checcking for wrong keys in file "} << filename << {\cf22 "!"};\par
00060     {\cf19 for} ({\cf17 const} {\cf17 auto} &key : root.getMemberNames()) \{\par
00061         {\cf19 if} (!validKeys.contains(key)) \{\par
00062             LOG_WARNING << {\cf22 "Found wrong key "} << key << {\cf22 "!"};\par
00063             {\cf17 const} {\cf17 auto} error = getUnknownKeyLine(filename, key);\par
00064 \par
00065             {\cf19 if} (!error.has_value()) \{\par
00066                 LOG_ERROR << {\cf22 "Unable to find line of wrong key!"};\par
00067                 {\cf19 continue};\par
00068             \}\par
00069 \par
00070             {\cf20 // If the line can't be found, add -1 as line number}\par
00071             wrongKeys.emplace_back(error.value_or(-1), key);\par
00072         \}\par
00073     \}\par
00074 \par
00075     {\cf19 return} wrongKeys;\par
00076 \}\par
00077 \par
00078 std::vector<std::tuple<int, std::string>> KeyValidator::validateEntries(\par
00079     {\cf17 const} std::string &filename,\par
00080     {\cf17 const} std::unordered_set<std::string> &entryKeys){\cf17  const }\{\par
00081     std::vector<std::tuple<int, std::string>> wrongKeys = \{\};\par
00082 \par
00083     {\cf19 for} ({\cf17 const} {\cf17 auto} &key : entryKeys) \{\par
00084         LOG_INFO << {\cf22 "Checking key "} << key << {\cf22 "!"};\par
00085         {\cf19 if} (!validEntryKeys.contains(key)) \{\par
00086             {\cf17 const} {\cf17 auto} error = getUnknownKeyLine(filename, key);\par
00087 \par
00088             {\cf19 if} (!error.has_value()) \{\par
00089                 LOG_ERROR << {\cf22 "Unable to find line of wrong key!"};\par
00090                 {\cf19 continue};\par
00091             \}\par
00092 \par
00093             wrongKeys.emplace_back(error.value_or(-1), key);\par
00094         \}\par
00095     \}\par
00096 \par
00097     {\cf19 return} wrongKeys;\par
00098 \}\par
00099 \par
00100 {\cf18 void} KeyValidator::validateTypes(\par
00101     {\cf17 const} std::string &filename, {\cf17 const} Json::Value &entry,\par
00102     {\cf17 const} std::unordered_set<std::string> &entryKeys) \{\par
00103     {\cf20 // Gett the type of the entry - error if not found}\par
00104     {\cf17 const} std::string type = entry.get({\cf22 "type"}, {\cf22 "ERROR"}).asString();\par
00105     LOG_INFO << {\cf22 "Validating type "} << type;\par
00106 \par
00107     {\cf20 // If the type is not found, throw an exception}\par
00108     {\cf19 if} (type == {\cf22 "ERROR"}) \{\par
00109         {\cf19 throw} exceptions::MissingTypeException();\par
00110         {\cf20 // If the type is not known, throw an exception}\par
00111         {\cf20 // @note This should already have been checked}\par
00112     \} {\cf19 else} {\cf19 if} (!typeToKeys.contains(type)) \{\par
00113         {\cf17 const} std::optional<int> line =\par
00114             getUnknownKeyLine(filename, std::string(type));\par
00115 \par
00116         {\cf19 if} (!line.has_value()) \{\par
00117             LOG_INFO << {\cf22 "Unable to find line of wrong type!"};\par
00118         \}\par
00119 \par
00120         {\cf19 throw} exceptions::InvalidTypeException(std::string(type), line.value());\par
00121         {\cf20 // If the type is known, check if all necessary keys are present}\par
00122     \} {\cf19 else} \{\par
00123         {\cf19 for} ({\cf17 const} {\cf17 auto} &key : typeToKeys[type]) \{\par
00124             LOG_INFO << {\cf22 "Checking key "} << key << {\cf22 " for type "} << type;\par
00125             {\cf19 if} (!entryKeys.contains(key)) \{\par
00126                 {\cf19 throw} exceptions::MissingKeyException(key, type);\par
00127             \}\par
00128         \}\par
00129     \}\par
00130 \}\par
00131 \par
00132 std::optional<int>\par
00133 KeyValidator::getUnknownKeyLine({\cf17 const} std::string &filename,\par
00134                                 {\cf17 const} std::string &wrongKey) \{\par
00135     std::ifstream file(filename);\par
00136     LOG_INFO << {\cf22 "Checking for key "} << wrongKey << {\cf22 " in file "} << filename;\par
00137 \par
00138     {\cf19 if} (!file.is_open()) \{\par
00139         LOG_ERROR << {\cf22 "File not open!"};\par
00140         {\cf19 return} std::nullopt;\par
00141     \}\par
00142 \par
00143     std::string line;\par
00144     {\cf20 // Create a regex pattern that matches the wrong key whole word}\par
00145     {\cf17 const} std::regex wrongKeyPattern({\cf22 "\\\\b"} + wrongKey + {\cf22 "\\\\b"});\par
00146 \par
00147     {\cf19 for} ({\cf18 int} lineNumber = 1; std::getline(file, line); ++lineNumber) \{\par
00148         {\cf19 if} (std::regex_search(line, wrongKeyPattern)) \{\par
00149             LOG_INFO << {\cf22 "Found key "} << wrongKey << {\cf22 " in line "} << lineNumber;\par
00150 \par
00151             {\cf19 return} lineNumber;\par
00152         \}\par
00153     \}\par
00154 \par
00155     {\cf19 return} std::nullopt;\par
00156 \}\par
00157 \par
00158 \} {\cf20 // namespace parsing}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/sources/Utils.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/sources/Utils.cpp}
{\xe \v src/sources/Utils.cpp}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation for the Utils class. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Utils.hpp"}\par
{\f2 #include "CommandLineHandler.hpp"}\par
{\f2 #include "Exceptions.hpp"}\par
{\f2 #include "config.hpp"}\par
{\f2 #include <LoggingWrapper.hpp>}\par
{\f2 #include <filesystem>}\par
{\f2 #include <string>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Utils.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d88/Utils_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b utilities}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Includes all utilities. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation for the Utils class. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Simon Blum \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2024-04-26 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0.2.2\par
}}This file includes the implementation for the Utils class.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
src/include/utility/Utilities.hpp\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
See LICENSE file \par
}}}{
Definition in file {\b Utils.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Utils.cpp\par \pard\plain 
{\tc\tcl2 \v src/sources/Utils.cpp}
{\xe \v src/sources/Utils.cpp}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00015 {\cf21 #include "Utils.hpp"}\par
00016 {\cf21 #include "CommandLineHandler.hpp"}\par
00017 {\cf21 #include "Exceptions.hpp"}\par
00018 {\cf21 #include "config.hpp"}\par
00019 \par
00020 {\cf21 #include <LoggingWrapper.hpp>}\par
00021 {\cf21 #include <filesystem>}\par
00022 {\cf21 #include <string>}\par
00023 \par
00024 {\cf17 namespace }utilities \{\par
00025 {\cf18 void} Utils::setupEasyLogging({\cf17 const} std::string &configFile) \{\par
00026     el::Configurations conf(configFile);\par
00027     el::Loggers::reconfigureAllLoggers(conf);\par
00028     LOG_INFO << {\cf22 "Running "} << config::PROJECT_NAME << {\cf22 " v"}\par
00029              << config::MAJOR_VERSION << {\cf22 "."} << config::MINOR_VERSION << {\cf22 "."}\par
00030              << config::PATCH_VERSION;\par
00031     LOG_INFO << {\cf22 "For more Information checkout "} << config::HOMEPAGE_URL;\par
00032     LOG_INFO << {\cf22 "EasyLogging has been setup!"};\par
00033 \}\par
00034 {\cf18 bool} Utils::askToContinue({\cf17 const} std::string &prompt) \{\par
00035     std::string userInput;\par
00036     LOG_INFO << {\cf22 "Asking for user Confirmation to continue..."};\par
00037     OUTPUT << cli::BOLD << prompt << cli::RESET;\par
00038 \par
00039     {\cf19 do} \{\par
00040         std::cin >> userInput;\par
00041         std::ranges::transform(userInput, userInput.begin(), ::tolower);\par
00042 \par
00043         {\cf19 if} (userInput != {\cf22 "y"} && userInput != {\cf22 "yes"} && userInput != {\cf22 "n"} &&\par
00044                 userInput != {\cf22 "no"}) \{\par
00045             LOG_INFO << {\cf22 "Wrong user input!"};\par
00046             OUTPUT << cli::ITALIC << {\cf22 "Please enter Y/Yes or N/No!\\n"} << cli::RESET;\par
00047             {\cf19 continue};\par
00048         \}\par
00049 \par
00050         {\cf19 break};\par
00051     \} {\cf19 while} ({\cf17 true});\par
00052 \par
00053     {\cf19 return} userInput == {\cf22 "y"} || userInput == {\cf22 "yes"};\par
00054 \}\par
00055 {\cf18 void} Utils::checkConfigFile({\cf17 const} std::string &configFile) \{\par
00056     {\cf19 if} (!std::filesystem::is_regular_file(configFile)) \{\par
00057         std::cerr << cli::RED << cli::BOLD\par
00058                   << {\cf22 "Fatal: Easylogging configuration file not found at:\\n"}\par
00059                   << cli::RESET << cli::ITALIC << {\cf22 "\\n\\t\\""} << configFile << {\cf22 "\\"\\n\\n"}\par
00060                   << cli::RESET;\par
00061         std::cout << {\cf22 "Aborting...\\n"};\par
00062         exit(1);\par
00063     \}\par
00064 \}\par
00065 {\cf17 const} std::string &Utils::checkDirectory(std::string &directory) \{\par
00066     {\cf19 if} (!directory.empty() && directory.back() != {\cf23 '/'} &&\par
00067             directory.back() != {\cf23 '\\\\'}) \{\par
00068         directory += {\cf23 '/'};\par
00069     \}\par
00070 \par
00071     {\cf19 if} (!std::filesystem::exists(directory)) \{\par
00072         {\cf19 throw} exceptions::NoSuchDirException(directory);\par
00073     \}\par
00074 \par
00075     {\cf19 return} directory;\par
00076 \}\par
00077 {\cf18 bool} Utils::handleParseException({\cf17 const} exceptions::CustomException &e,\par
00078                                  {\cf17 const} std::vector<std::string>::iterator &file,\par
00079                                  {\cf17 const} std::vector<std::string> &files) \{\par
00080     OUTPUT << {\cf22 "\\nThere has been a error while trying to parse \\""} << *file\par
00081            << {\cf22 ":\\n"};\par
00082     LOG_ERROR << e.what();\par
00083 \par
00084     {\cf19 if} (std::next(file) != files.end() &&\par
00085             !utilities::Utils::askToContinue(\par
00086                 {\cf22 "Do you want to continue with the other files? (y/n) "}\par
00087                 {\cf22 ""})) \{\par
00088         OUTPUT << {\cf22 "Aborting..."};\par
00089         LOG_INFO << {\cf22 "Application ended by user Input"};\par
00090         {\cf19 return} {\cf17 false};\par
00091     \}\par
00092 \par
00093     std::cout << std::endl;\par
00094     {\cf19 return} {\cf17 true};\par
00095 \}\par
00096 \par
00097 std::string Utils::escapeString({\cf17 const} std::string &str) \{\par
00098     {\cf20 // Map of characters to their escape sequences}\par
00099     {\cf17 static} {\cf17 const} std::unordered_map<char, std::string> escapeSequences = \{\par
00100         \{{\cf23 '\\\\'}, {\cf22 "\\\\\\\\"}\},    {\cf20 // Replace backslash with double backslash}\par
00101         \{{\cf23 '\\n'}, {\cf22 "\\\\n"}\},     {\cf20 // Replace newline with backslash-n}\par
00102         \{{\cf23 '\\t'}, {\cf22 "\\\\t"}\},     {\cf20 // Replace tab with backslash-t}\par
00103         \{{\cf22 '\\x1A'}, {\cf22 "\\\\x1A"}\}, {\cf20 // Replace end of file with backslash-x1A}\par
00104         \{{\cf23 '\\r'}, {\cf22 "\\\\r"}\}      {\cf20 // Replace carriage return with backslash-r}\par
00105     \};\par
00106 \par
00107     std::ostringstream escapedStream;\par
00108     {\cf19 for} ({\cf18 char} c : str) \{\par
00109         {\cf20 // Replace a character with it's counterpart, if it is in the map}\par
00110         {\cf19 if} (escapeSequences.contains(c)) \{\par
00111             escapedStream << escapeSequences.at(c);\par
00112         \} {\cf19 else} \{\par
00113             escapedStream << c;\par
00114         \}\par
00115     \}\par
00116     {\cf19 return} escapedStream.str();\par
00117 \}\par
00118 \par
00119 \} {\cf20 // namespace utilities}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
