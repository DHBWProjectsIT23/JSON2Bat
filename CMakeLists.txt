cmake_minimum_required(VERSION 3.16)

# Currently not supported on Windows

set(PROJECT_NAME jsonToBatch)

# Set basic CMAKE flags
set(CMAKE_CXX)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED true)
set(CMAKE_BUILD_TYPE Debug)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)


# Setting information for the generated files
set(AUTOGENERATED_WARNING
    "This file is autogenerated. Changes will be overwritten")
set(AUTHORS "Elena Schwarzbach, Max Rodler, Simon Blum, Sonia Sinaci")

# Initialize the project This information is also used to generate files
project(
  ${PROJECT_NAME}
  VERSION 0.1.6
  DESCRIPTION "A simple tool to convert json to batch."
  HOMEPAGE_URL "https://definitelynotsimon13.github.io/ProjectJsonToBat")

# Configure Files
add_subdirectory(conf)

# Astyle will autoformat when building
find_program(ASTYLE_EXECUTABLE NAMES astyle)
if(ASTYLE_EXECUTABLE)
  add_custom_target(
    astyle
    # TODO: Fix astyle
    COMMAND astyle -r ${PROJECT_SOURCE_DIR}/src/*.cpp,*.hpp
    # COMMAND astyle --project=${PROJECT_SOURCE_DIR}/.astylerc -r
            ${PROJECT_SOURCE_DIR}/src/*.cpp,*.hpp
    VERBATIM)
  set_target_properties(astyle PROPERTIES EXCLUDE_FROM_ALL FALSE)
else(ASTYLE_EXECUTABLE)
  message(STATUS "Astyle executable not found")
endif(ASTYLE_EXECUTABLE)

# If doxygen is found, documentation can be generated by building the target
# doxygen_build
find_package(Doxygen)
if(DOXYGEN_FOUND)
  set(DOXYGEN_IN ${PROJECT_SOURCE_DIR}/conf/Doxyfile.in)
  set(DOXYGEN_OUT ${PROJECT_SOURCE_DIR}/Doxyfile)
  configure_file(${DOXYGEN_IN} ${DOXYGEN_OUT} @ONLY)
  add_custom_target(
    doxygen_build
    COMMENT "Generating documentation with Doxygen..."
    COMMAND ${DOXYGEN_EXECUTABLE} ${DOXYGEN_OUT}
    WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
    VERBATIM)
else(DOXYGEN_FOUND)
  message(STATUS "Doxygen not found, unable to build documentation")
endif(DOXYGEN_FOUND)


# Add sources for the main executable
set(SOURCES
    ${PROJECT_SOURCE_DIR}/src/main.cpp
    ${PROJECT_SOURCE_DIR}/src/sources/CommandLineHandler.cpp
    ${PROJECT_SOURCE_DIR}/src/sources/Utils.cpp
    ${PROJECT_SOURCE_DIR}/src/sources/BatchCreator.cpp
    ${PROJECT_SOURCE_DIR}/src/sources/FileData.cpp
    ${PROJECT_SOURCE_DIR}/src/sources/JsonHandler.cpp
    ${PROJECT_SOURCE_DIR}/src/sources/ErrorHandler.cpp
        ${PROJECT_SOURCE_DIR}/src/sources/KeyValidator.cpp)

# Add main executable
add_executable(${PROJECT_NAME} ${SOURCES})

# Add subdirectories
add_subdirectory(lib)

# Set include directories
target_include_directories(
  ${PROJECT_NAME}
  PRIVATE ${PROJECT_SOURCE_DIR}/include ${PROJECT_SOURCE_DIR}/src/include
          ${PROJECT_SOURCE_DIR}/src/include/utility
          ${PROJECT_SOURCE_DIR}/src/include/parsing)

if(WIN32)
  message(WARNING "This project is not supported on Windows yet.")
  target_compile_definitions(${PROJECT_NAME} PRIVATE IS_WINDOWS)
elseif(UNIX)
  target_compile_definitions(${PROJECT_NAME} PRIVATE IS_UNIX)
endif()
