.TH "exceptions::MissingTypeException" 3 "Fri Apr 26 2024 09:28:43" "Version 0.2.2" "JSON2Batch" \" -*- nroff -*-
.ad l
.nh
.SH NAME
exceptions::MissingTypeException \- Exception for missing types of entries\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Exceptions\&.hpp>\fP
.PP
Inherits \fBexceptions::CustomException\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMissingTypeException\fP ()"
.br
.ti -1c
.RI "const char * \fBwhat\fP () const noexcept override"
.br
.in -1c

Public Member Functions inherited from \fBexceptions::CustomException\fP
.in +1c
.ti -1c
.RI "const char * \fBwhat\fP () const noexcept override"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "std::string \fBmessage\fP = 'Missing \\'type\\' key for at least one entry!'"
.br
.in -1c
.SH "Detailed Description"
.PP 
Exception for missing types of entries\&. 

This exception is thrown, when an entry is missing it's 'type' key\&. 
.PP
Definition at line \fB215\fP of file \fBExceptions\&.hpp\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "exceptions::MissingTypeException::MissingTypeException ()\fC [inline]\fP"

.PP
Definition at line \fB220\fP of file \fBExceptions\&.hpp\fP\&.
.PP
References \fBmessage\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "const char * exceptions::MissingTypeException::what () const\fC [inline]\fP, \fC [override]\fP, \fC [noexcept]\fP"

.PP
Definition at line \fB223\fP of file \fBExceptions\&.hpp\fP\&.
.PP
References \fBmessage\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "std::string exceptions::MissingTypeException::message = 'Missing \\'type\\' key for at least one entry!'\fC [private]\fP"

.PP
Definition at line \fB217\fP of file \fBExceptions\&.hpp\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for JSON2Batch from the source code\&.
