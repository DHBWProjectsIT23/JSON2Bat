.TH "utilities::Utils" 3 "Fri Apr 26 2024 09:29:06" "Version 0.2.2" "JSON2Batch" \" -*- nroff -*-
.ad l
.nh
.SH NAME
utilities::Utils \- Responsible for utility function\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Utils\&.hpp>\fP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBsetupEasyLogging\fP (const std::string &configFile)"
.br
.RI "Set up easylogging\&. "
.ti -1c
.RI "static bool \fBhandleParseException\fP (const \fBexceptions::CustomException\fP &e, const std::vector< std::string >::iterator &file, const std::vector< std::string > &files)"
.br
.ti -1c
.RI "static bool \fBaskToContinue\fP (const std::string &prompt='Do you want to continue? (Y/N)\\n')"
.br
.RI "Asks if the user wants to continue\&. "
.ti -1c
.RI "static std::string & \fBcheckDirectory\fP (std::string &directory)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Responsible for utility function\&. 

This class is responsible for handling miscellaneous utility functions which be used throughout the whole project\&. 
.PP
Definition at line \fB40\fP of file \fBUtils\&.hpp\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "bool utilities::Utils::askToContinue (const std::string & prompt = \fC'Do you want to continue? (Y/N)\\n'\fP)\fC [static]\fP"

.PP
Asks if the user wants to continue\&. Asks the user if they want to continue and prompts them for a response\&. 
.PP
\fBParameters\fP
.RS 4
\fIprompt\fP (Optional) A custom prompt to be used\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Returns true if the user wants to continue and false otherwise\&. 
.RE
.PP

.PP
Definition at line \fB34\fP of file \fBUtils\&.cpp\fP\&.
.SS "std::string & utilities::Utils::checkDirectory (std::string & directory)\fC [static]\fP"

.PP
\fBTodo\fP
.RS 4
documentation 
.RE
.PP

.PP
Definition at line \fB55\fP of file \fBUtils\&.cpp\fP\&.
.SS "bool utilities::Utils::handleParseException (const \fBexceptions::CustomException\fP & e, const std::vector< std::string >::iterator & file, const std::vector< std::string > & files)\fC [static]\fP"

.PP
Definition at line \fB66\fP of file \fBUtils\&.cpp\fP\&.
.PP
References \fBaskToContinue()\fP, and \fBexceptions::CustomException::what()\fP\&.
.SS "void utilities::Utils::setupEasyLogging (const std::string & configFile)\fC [static]\fP"

.PP
Set up easylogging\&. This function sets up the easylogging library based on the given config file\&. 
.PP
\fBParameters\fP
.RS 4
\fIconfigFile\fP The config file which is used 
.RE
.PP

.PP
Definition at line \fB26\fP of file \fBUtils\&.cpp\fP\&.
.PP
References \fBHOMEPAGE_URL\fP, \fBMAJOR_VERSION\fP, \fBMINOR_VERSION\fP, \fBPATCH_VERSION\fP, and \fBPROJECT_NAME\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for JSON2Batch from the source code\&.
