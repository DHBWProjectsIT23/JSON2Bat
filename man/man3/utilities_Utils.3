.TH "utilities::Utils" 3 "Fri Apr 26 2024 14:39:53" "Version 0.2.3" "JSON2Batch" \" -*- nroff -*-
.ad l
.nh
.SH NAME
utilities::Utils \- Responsible for utility function\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Utils\&.hpp>\fP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBsetupEasyLogging\fP (const std::string &configFile)"
.br
.RI "Set up easylogging\&. "
.ti -1c
.RI "static bool \fBhandleParseException\fP (const \fBexceptions::CustomException\fP &e, const std::vector< std::string >::iterator &file, const std::vector< std::string > &files)"
.br
.RI "Handle an exception within the main parsing loop\&. "
.ti -1c
.RI "static bool \fBaskToContinue\fP (const std::string &prompt='Do you want to continue? (Y/N)\\n')"
.br
.RI "Asks if the user wants to continue\&. "
.ti -1c
.RI "static void \fBcheckConfigFile\fP (const std::string &configFile)"
.br
.RI "Checks if the easylogging-config file exists\&. "
.ti -1c
.RI "static const std::string & \fBcheckDirectory\fP (std::string &directory)"
.br
.RI "Checks if the given directory exists and is valid\&. "
.in -1c
.SH "Detailed Description"
.PP 
Responsible for utility function\&. 

This class is responsible for handling miscellaneous utility functions which be used throughout the whole project\&. 
.PP
Definition at line \fB42\fP of file \fBUtils\&.hpp\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "bool utilities::Utils::askToContinue (const std::string & prompt = \fC'Do you want to continue? (Y/N)\\n'\fP)\fC [static]\fP"

.PP
Asks if the user wants to continue\&. Asks the user if they want to continue and prompts them for a response\&. 
.PP
\fBParameters\fP
.RS 4
\fIprompt\fP (Optional) A custom prompt to be used\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Returns true if the user wants to continue and false otherwise\&. 
.RE
.PP

.PP
Definition at line \fB34\fP of file \fBUtils\&.cpp\fP\&.
.SS "void utilities::Utils::checkConfigFile (const std::string & configFile)\fC [static]\fP"

.PP
Checks if the easylogging-config file exists\&. 
.PP
\fBParameters\fP
.RS 4
\fIconfigFile\fP The config file to be checked 
.RE
.PP

.PP
Definition at line \fB55\fP of file \fBUtils\&.cpp\fP\&.
.SS "const std::string & utilities::Utils::checkDirectory (std::string & directory)\fC [static]\fP"

.PP
Checks if the given directory exists and is valid\&. This function checks if the given directory exists and is valid\&. If the directory does not end with a '/' or a '\\', it will be added\&.
.PP
\fBParameters\fP
.RS 4
\fIdirectory\fP The directory to be checked
.RE
.PP
\fBReturns\fP
.RS 4
The checked directory 
.RE
.PP

.PP
Definition at line \fB65\fP of file \fBUtils\&.cpp\fP\&.
.SS "bool utilities::Utils::handleParseException (const \fBexceptions::CustomException\fP & e, const std::vector< std::string >::iterator & file, const std::vector< std::string > & files)\fC [static]\fP"

.PP
Handle an exception within the main parsing loop\&. This function handles an exception within the main parsing loop\&. It displays the error message and asks the user if they want to continue\&.
.IP "\(bu" 2
Moved to \fBUtils\fP in 0\&.2\&.2 to improve readibility in \fBmain\&.cpp\fP
.PP
.PP
\fBParameters\fP
.RS 4
\fIe\fP The exception to be handled 
.br
\fIfile\fP The file which caused the exception 
.br
\fIfiles\fP The list of files
.RE
.PP
\fBReturns\fP
.RS 4
Returns true if the user wants to continue and false otherwise 
.RE
.PP

.PP
Definition at line \fB77\fP of file \fBUtils\&.cpp\fP\&.
.PP
References \fBaskToContinue()\fP, and \fBexceptions::CustomException::what()\fP\&.
.SS "void utilities::Utils::setupEasyLogging (const std::string & configFile)\fC [static]\fP"

.PP
Set up easylogging\&. This function sets up the easylogging library based on the given config file\&. 
.PP
\fBParameters\fP
.RS 4
\fIconfigFile\fP The config file which is used 
.RE
.PP

.PP
Definition at line \fB25\fP of file \fBUtils\&.cpp\fP\&.
.PP
References \fBconfig::HOMEPAGE_URL\fP, \fBconfig::MAJOR_VERSION\fP, \fBconfig::MINOR_VERSION\fP, \fBconfig::PATCH_VERSION\fP, and \fBconfig::PROJECT_NAME\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for JSON2Batch from the source code\&.
