.TH "src/main.cpp" 3 "Fri Apr 26 2024 13:19:44" "Version 0.2.2" "JSON2Batch" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/main.cpp \- Contains the main function\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <LoggingWrapper\&.hpp>\fP
.br
\fC#include <cstdlib>\fP
.br
\fC#include <filesystem>\fP
.br
\fC#include <fstream>\fP
.br
\fC#include <tuple>\fP
.br
\fC#include <vector>\fP
.br
\fC#include 'BatchCreator\&.hpp'\fP
.br
\fC#include 'CommandLineHandler\&.hpp'\fP
.br
\fC#include 'Exceptions\&.hpp'\fP
.br
\fC#include 'JsonHandler\&.hpp'\fP
.br
\fC#include 'Utils\&.hpp'\fP
.br
\fC#include 'config\&.hpp'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "std::tuple< std::vector< std::string >, std::string > \fBparseAndValidateArgs\fP (int argc, char *argv[])"
.br
.RI "Validates and parses arguments\&. "
.ti -1c
.RI "const std::vector< std::string > \fBvalidateFiles\fP (const std::vector< std::string > &files)"
.br
.RI "Checks if the files are valid\&. "
.ti -1c
.RI "void \fBparseFile\fP (const std::string &file, const std::string &outputDirectory)"
.br
.RI "Parses the given file and writes the output to the output directory\&. "
.ti -1c
.RI "int \fBmain\fP (int argc, char *argv[])"
.br
.RI "Main function of the program\&. "
.in -1c
.SH "Detailed Description"
.PP 
Contains the main function\&. 


.PP
\fBAuthor\fP
.RS 4
Elena Schwarzbach, Max Rodler, Simon Blum, Sonia Sinaci 
.RE
.PP
\fBDate\fP
.RS 4
2024-04-26 
.RE
.PP
\fBVersion\fP
.RS 4
0\&.2\&.2
.RE
.PP
The main function is responsible for connection all parts of the programm\&. It calls all relevant classes and finishes when everything is done\&.
.PP
\fBCopyright\fP
.RS 4
See LICENSE file 
.RE
.PP

.PP
Definition in file \fBmain\&.cpp\fP\&.
.SH "Function Documentation"
.PP 
.SS "int main (int argc, char * argv[])"

.PP
Main function of the program\&. The main function is responsible for connection all parts of the programm\&. It calls all relevant classes and finishes when everything is done\&.
.PP
\fBParameters\fP
.RS 4
\fIargc\fP The number of arguments given 
.br
\fIargv\fP The command line arguments given
.RE
.PP
\fBReturns\fP
.RS 4
Returns 0 on success, 1 on failure 
.RE
.PP

.PP
Definition at line \fB68\fP of file \fBmain\&.cpp\fP\&.
.PP
References \fButilities::Utils::checkConfigFile()\fP, \fButilities::Utils::handleParseException()\fP, \fBconfig::LOG_CONFIG\fP, \fBparseAndValidateArgs()\fP, \fBparseFile()\fP, \fButilities::Utils::setupEasyLogging()\fP, and \fBvalidateFiles()\fP\&.
.SS "std::tuple< std::vector< std::string >, std::string > parseAndValidateArgs (int argc, char * argv[])"

.PP
Validates and parses arguments\&. 
.PP
\fBParameters\fP
.RS 4
\fIargc\fP Number of arguments provided 
.br
\fIargv\fP The arguments provided 
.RE
.PP
\fBReturns\fP
.RS 4
A tuple containing the files to be parsed and the output directory 
.RE
.PP

.PP
Definition at line \fB105\fP of file \fBmain\&.cpp\fP\&.
.PP
References \fButilities::Utils::checkDirectory()\fP, \fBcli::CommandLineHandler::parseArguments()\fP, \fBcli::CommandLineHandler::printHelp()\fP, and \fBexceptions::CustomException::what()\fP\&.
.SS "void parseFile (const std::string & file, const std::string & outputDirectory)"

.PP
Parses the given file and writes the output to the output directory\&. Creates the Batch file from the given file 
.PP
\fBParameters\fP
.RS 4
\fIfile\fP The file to be parsed 
.RE
.PP

.PP
Definition at line \fB177\fP of file \fBmain\&.cpp\fP\&.
.PP
References \fBBatchCreator::getDataStream()\fP, and \fBparsing::JsonHandler::getFileData()\fP\&.
.SS "const std::vector< std::string > validateFiles (const std::vector< std::string > & files)"

.PP
Checks if the files are valid\&. Makes sures, that provided files exists and checks their file ending 
.PP
\fBParameters\fP
.RS 4
\fIfiles\fP The files to be checked 
.RE
.PP
\fBReturns\fP
.RS 4
A vector containing the valid files 
.RE
.PP

.PP
Definition at line \fB135\fP of file \fBmain\&.cpp\fP\&.
.PP
References \fButilities::Utils::askToContinue()\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for JSON2Batch from the source code\&.
